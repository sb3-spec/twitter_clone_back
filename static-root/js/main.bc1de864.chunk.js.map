{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","api/profiles/ApiFunctions.js","profiles/components.js","media/forest_banner.jpg","components/profile-edit/ProfileEdit.jsx","profiles/badge.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","components/messages/MessageHub.jsx","tweets/components/TweetFeedList.jsx","components/tweet-form/TweetForm.jsx","tweets/components/TweetList.jsx","components/feed/Feed.jsx","tweets/components/UserTweetList.jsx","components/ProfileComponent.jsx","components/navbar/Navbar.jsx","components/tweets/TweetDetail.jsx","pages/Home.jsx","App.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","response","status","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiTweetDetail","tweetId","tweet_id","apiGetTweetData","apiGetUserTweets","apiGetProfileData","UserPicture","props","user","hideLink","isProfile","console","log","className","UserLink","children","onClick","event","stopPropagation","window","location","href","UserDisplay","includeFullName","nameDisplay","first_name","last_name","UserImages","banner","src","alt","ProfileEdit","closeModal","usernameRef","useRef","bioRef","bio","locationRef","dataHasChanged","current","value","class","preventDefault","apiEditProfile","ref","ProfileBadgeComponent","useState","didLookup","setDidLookup","profileOwner","setProfileOwner","isLoading","setIsLoading","currUser","setCurrUser","setProfile","getProfileCallback","alert","useEffect","path","pathname","usernameRegex","match","groups","mounted","fetchProfile","a","ProfileBadge","isEditingProfile","setIsEditingProfile","handleToggleEdit","prevState","handleFollowCallback","numeral","following_count","format","follower_count","is_following","TweetOptionsBtn","tweet","currentUser","setIsDeleted","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","apiTweetDelete","id","addEventListener","contains","target","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","didLookupTweet","setDidLookupTweet","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","action","currentAction","apiTweetAction","Retweet","parent","isMounted","fetchData","TweetDetail","setTweet","handleTweetLookup","handleCurrUserLookup","MessageHub","TweetFeedList","newTweets","setNewTweets","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","loading","setLoading","fetchTweetFeed","idx","TweetForm","textAreaRef","handleBackendRefresh","tempNewTweets","unshift","placeholder","required","newTweetContent","TweetList","Feed","setTweetsDidSet","UserTweetList","tweetsExist","setTweetsExist","setNextUrl","handleGetUserTweets","results","next","ProfileComponent","Navbar","activeSection","setActiveSection","NavbarListItemComponent","active","setPath","to","includes","tweetCallback","idRegex","tweetid","fetchTweet","Home","currentSection","setCurrentSection","apiTweetListCallback","concat","exact","element","App","didFetchUserProfile","setDidFetchUserProfile","profileFetchCallback","React","createElement","app","getElementById","ReactDOM","render","dataset","globalTweetList","tweetDetailElements","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.bc1de864.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    // if (xhr.status === 403) {\r\n    //   const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n    //    if (loginLocationIndex === -1) {\r\n    //     window.location.href = \"/login?showLoginRequired=true\"\r\n    //    }\r\n    // }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {tweet_id: tweetId})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetUserTweets(callback, username, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username !== null && username !== undefined) {\r\n        endpoint += `${username}/tweets/`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiGetProfileData(callback, username, method) {\r\n    let endpoint = `/profiles/${username && username}`\r\n\r\n    lookup(method, endpoint, callback)\r\n}\r\n\r\nexport function apiToggleFollow(callback, username) {\r\n    let endpoint = `/profiles/${username && username}/follow`\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiEditProfile(callback, data) {\r\n    let endpoint = `/profiles/edit`\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetCurrentProfile(callback) {\r\n    let endpoint = `/profiles/auth`\r\n    lookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, hideLink, isProfile} = props\r\n    if (isProfile) {console.log('this is the profile pic')}\r\n    return hideLink ? ( \r\n        <div className=\"profile__picture__shell\">\r\n            <UserLink user={user} hideLink={hideLink}>\r\n                <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large bg-dark text-white rounded-circle\"}>\r\n                    {user.username ? user.username[0] : 'a'}\r\n                </span>\r\n            </UserLink>\r\n        </div>\r\n    ) : (\r\n        <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large\"}> \r\n                {user.username ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport const UserLink = ({ user, children }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profile/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>\r\n            {children}\r\n        </span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name}` : `${user.username}`\r\n\r\n    return (\r\n        <div className=\"user-display__container\">\r\n            {nameDisplay}{' '}\r\n            {hideLink ? `@${user.username}` : <UserLink user={user}>{`@${user.username}`}</UserLink>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function UserImages(props) {\r\n    const {user, banner} = props\r\n    return (\r\n        <div className=\"images__container\">\r\n            <div className=\"profile__banner_picture\"><img className=\"banner-img\" src={banner} alt=\"mountain in front of sunset\"/></div>\r\n            <div className=\"profile__picture\">\r\n                <UserPicture user={user} isProfile hideLink />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/forest_banner.2143f87a.jpg\";","import React, {useRef} from 'react';\r\nimport {UserImages} from '../../profiles';\r\nimport {apiEditProfile} from '../../api/profiles';\r\n\r\nimport './styles.css';\r\nimport banner from '../../media/forest_banner.jpg';\r\n\r\nfunction ProfileEdit(props) {\r\n    const {user, closeModal, callback} = props\r\n    const usernameRef = useRef(user.username);\r\n    const bioRef = useRef(user.bio);\r\n    const locationRef = useRef(user.location);\r\n\r\n   \r\n\r\n\r\n\r\n    const saveProfile = (event) => {\r\n        event.preventDefault();\r\n        if (dataHasChanged()) {\r\n            const data = {\r\n                \"username\": usernameRef.current.value,\r\n                \"bio\": bioRef.current.value,\r\n                \"location\": locationRef.current.value\r\n            }\r\n            apiEditProfile(callback, data);\r\n\r\n        }\r\n        closeModal(event);\r\n    }\r\n\r\n    const dataHasChanged = () => {\r\n        console.log(usernameRef.current.value, user.username);\r\n        if (usernameRef.current.value !== user.username) {\r\n            return true\r\n        }\r\n        if (bioRef.current.value !== user.bio) {\r\n            return true\r\n        }\r\n        if (locationRef.current.value !== user.location) {\r\n            return true\r\n        }\r\n        // const data = [usernameRef.current, bioRef.current, locationRef.current]\r\n        // const userData = [user.username, user.bio, user.location]\r\n        // data.map((data, i) => {\r\n        //     console.log(data, i);\r\n        //     if (data !== userData[i]) {\r\n        //         return true\r\n        //     }\r\n        // });\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-container\">\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"edit-profile__container\">\r\n                <div className=\"edit__banner\">\r\n                    <div className=\"close-modal__container\">\r\n                        <span className=\"close-modal__bg\" onClick={closeModal}><i class=\"fas fa-times close-modal\"></i></span>\r\n                    </div>\r\n                    <div className=\"banner__text__container\">\r\n                        <p className=\"banner__text\">Edit Profile</p>\r\n                    </div>\r\n                    <button className=\"save-btn\" onClick={saveProfile}>Save</button>\r\n                </div>\r\n                <UserImages user={user} banner={banner}/>\r\n                <div className=\"profile-forms\">\r\n                    <form>\r\n                        <div className=\"form-container\">\r\n                            <label>Username</label>\r\n                            <textarea className=\"edit username\" ref={usernameRef}>{usernameRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label>Bio</label>\r\n                            <textarea className=\"edit bio\" ref={bioRef}>{bioRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container small-form\">\r\n                            <label>Location</label>\r\n                            <textarea className=\"edit location\" ref={locationRef}>{locationRef.current}</textarea>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {UserImages} from './components'\r\nimport {apiGetProfileData} from '../api/profiles'\r\nimport numeral from 'numeral'\r\n\r\nimport banner from '../media/forest_banner.jpg'\r\nimport './styles.css'\r\nimport ProfileEdit from '../components/profile-edit/ProfileEdit'\r\n\r\nexport const ProfileBadgeComponent = (props) => {\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [profileOwner, setProfileOwner] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { currUser, className, setCurrUser, setProfile } = props\r\n\r\n    const getProfileCallback = (response,  status) => {\r\n        console.log(response);\r\n        if (status === 200) {\r\n            setProfileOwner(response);\r\n        } else if (status === 404) {\r\n            alert('User does not exist');\r\n            window.location.href = '/';\r\n        } else if (status === 403 || status === 401) {\r\n            window.location.href = '/login'\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        var path = window.location.pathname\r\n        var usernameRegex = /(?<username>)/\r\n        var match = path.match(usernameRegex)\r\n        if (match) {\r\n            var username = match.groups.username\r\n        }\r\n        let mounted = true;\r\n        const fetchProfile = async() => {\r\n            if (!mounted || didLookup) {return}\r\n            apiGetProfileData(getProfileCallback, username, 'GET');\r\n            setDidLookup(true);\r\n            setIsLoading(false);\r\n        }\r\n        fetchProfile();\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    })\r\n\r\n    return (!isLoading && profileOwner) ? <ProfileBadge user={profileOwner} currUser={currUser} setProfile={setProfile} className={className} setCurrUser={setCurrUser} /> : <span>User Not Found</span>;\r\n}\r\n\r\n\r\nfunction ProfileBadge(props) {\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n    const {user, setProfile, className, setCurrUser, currUser} = props\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!user) {return}\r\n        apiGetProfileData(handleFollowCallback, user.username, \"POST\");\r\n    }\r\n\r\n    const handleToggleEdit = (event) => {\r\n        event.preventDefault();\r\n        setIsEditingProfile((prevState) => !prevState);\r\n    }\r\n\r\n    const handleFollowCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 403) {\r\n            window.location.href = '/login'\r\n        } else {\r\n            alert(\"We could not find the profile in question. Please try again later.\")\r\n        }\r\n    }\r\n\r\n    const handleProfileEditCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response);\r\n        }\r\n        window.location.href = `/profile/${response.username}`\r\n    }\r\n\r\n\r\n    return user ? (\r\n        <div className={`profile-container ${className}`}>\r\n            <UserImages user={user} banner={banner}/>\r\n            \r\n            <div className=\"profile__info\">\r\n                <h3>{user.username}</h3>\r\n                <p>{`@${user.username}`}</p>\r\n\r\n                <div className='bio'>{user.bio}</div>\r\n                <div className='location'>{user.location}</div>\r\n\r\n                <div className=\"follower-following-display\">\r\n                   <div className=\"following-count\">\r\n                       <p className=\"number\">{numeral(user.following_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}Following{\" \"}</p>\r\n                   </div>\r\n                    <div className=\"follower-count\">\r\n                        <p className=\"number\">{numeral(user.follower_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}{user.follower_count === 1 ? 'Follower' : 'Followers'}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"profile__buttons\">\r\n                {user === currUser ? \r\n                <button onClick={handleToggleEdit} className=\"profile__action-button\">{'Edit Profile'}</button> \r\n                : <button onClick={handleFollowToggle} className=\"profile__action-button\">{user.is_following ? 'Unfollow' : 'Follow'}</button>}                \r\n                          \r\n            </div>\r\n            {isEditingProfile && <ProfileEdit user={currUser} closeModal={handleToggleEdit} setProfile={setProfile} callback={handleProfileEditCallback}/>}\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { apiGetProfileData } from '../../api/profiles'\r\nimport { UserLink, UserPicture, UserDisplay } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, className, currentUser, nextUrl }) { \r\n    console.log(tweet)\r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet ? tweet.likes : 0);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n    const [didLookupProfile, setDidLookupProfile] = useState(false);\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                {console.log(tweet.user)}\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user}>{tweet.user.username}</UserLink></p>\r\n                <Tweet tweet={tweet.parent} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setDidRetweet(response['didRetweet']);\r\n            setDidLike(response['didLike']);\r\n            setLikes(response['likes']);\r\n            setDidLookupTweet(true);\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchData = async () => {\r\n            if (!isMounted) {return}\r\n            if (!didLookupTweet) {\r\n                apiGetTweetData(handleTweetDataCallback, tweet.id);\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [didLookupTweet, tweet]); \r\n    \r\n    let willRender = (!isDeleted && tweet && (tweet.content || tweet.parent))\r\n\r\n\r\n    return willRender ? (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    {tweet.user ? <UserLink><UserPicture user={tweet.user}/></UserLink>: \"Loading...\"}\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserDisplay user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    ) : <p>hello</p>\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail } from '../tweet_functions'\r\nimport {apiUserLookup} from '../tweet_functions' \r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [currUser, setCurrUser] = useState();\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n    const handleTweetLookup = (response, status) => {\r\n\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    const handleCurrUserLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response.username);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleTweetLookup);\r\n            apiUserLookup(handleCurrUserLookup);\r\n            setDidLookup(true);  \r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    <Tweet tweet={tweet} currentUser={currUser}/>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import React from 'react';\r\n\r\nfunction MessageHub() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default MessageHub;\r\n","import { useEffect, useState } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets]);\r\n      setNewTweets([]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const fetchTweetFeed = async () => {\r\n      if (!isMounted) {return}\r\n      if (!tweetsDidSet) {\r\n        apiTweetFeed(username, callback);\r\n      }\r\n    }\r\n    fetchTweetFeed();\r\n    setLoading(false);\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n    \r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (!loading && tweets.length > 0) ? (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : \r\n    <div className=\"tweet_feed__container\">\r\n      <p>Loading...</p>;\r\n    </div>\r\n}\r\n\r\nexport default TweetFeedList;","import React, {useRef} from 'react';\r\nimport {apiTweetList, apiTweetCreate} from '../../tweets/tweet_functions';\r\nimport {UserPicture} from '../../profiles';\r\nimport './styles.css'\r\n\r\nfunction TweetForm(props) {\r\n    const {currUser} = props\r\n    console.log(currUser);\r\n    const username = currUser  && currUser.username\r\n    const textAreaRef = useRef('')\r\n\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTweetContent = textAreaRef.current.value\r\n        if (newTweetContent !== '') {\r\n            apiTweetCreate(newTweetContent, handleBackendRefresh, username);\r\n        }\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"tweet-form__container-outer\">\r\n                <div className=\"tweet-form__container-inner\">\r\n                    <div className=\"profile__container\">\r\n                        <UserPicture user={currUser ? currUser : {\"username\":\"anon\"} }/>\r\n                    </div>\r\n                    <form className=\"tweet-form\">\r\n                        <label className=\"\"></label>\r\n                        <textarea placeholder=\"What's happening?\" ref={textAreaRef} required={true} className=\"tweet-form__textarea\">\r\n                        </textarea>\r\n                    </form>\r\n                </div>\r\n                <div className=\"tweet-form__buttons\">\r\n                    <button className=\"tweet-form__submit\" onClick={handleSubmit}>Tweet</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm;\r\n","import { useEffect, useState } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  const [loading, setLoading] =  useState(true);\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n      setLoading(false);\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (!loading && tweets) ? (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) :\r\n    <div className=\"tweet_feed__container\">\r\n      <p>Loading...</p>;\r\n    </div>\r\n}\r\n\r\nexport default TweetList","import React from 'react';\r\nimport TweetFeedList from '../../tweets/components/TweetFeedList';\r\nimport TweetForm from '../../components/tweet-form/TweetForm';\r\nimport TweetList from '../../tweets/components/TweetList';\r\nimport './styles.css';\r\n\r\nfunction Feed(props) {\r\n    const {currUser, newTweets, setNewTweets,\r\n        tweets, setTweets, tweetsDidSet, \r\n        callback, setTweetsDidSet, nextUrl, \r\n        handleLoadNextResponse} = props  \r\n    \r\n    return (\r\n        <div className=\"twitter_feed\">\r\n            <div className=\"home__header\">\r\n                <p className=\"header__content\">Home</p>\r\n            </div>\r\n            <div className=\"twitter-feed__container\">\r\n                <TweetForm\r\n                    currUser={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={callback}\r\n                />\r\n                {!currUser ?\r\n                <TweetList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> :\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />}\r\n            </div>\r\n        \r\n        </div>\r\n);\r\n}\r\n\r\nexport default Feed;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {apiGetUserTweets} from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nfunction UserTweetList(props) {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsExist, setTweetsExist] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const {user, handleLoadNextResponse, callback} = props;\r\n\r\n\r\n    const handleGetUserTweets = (response, status) => {\r\n        console.log(response)\r\n        if (status === 200) {\r\n            setTweets(response.results);\r\n            setTweetsExist(true);\r\n            setNextUrl(response.next)\r\n        } else if (status === 202) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (nextUrl !== null) {\r\n            apiGetUserTweets(handleLoadNextResponse, user.username, nextUrl);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n        if (mounted === true && user) {\r\n            apiGetUserTweets(handleGetUserTweets, user.username);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [setLoading, handleLoadNextResponse, user]);\r\n\r\n\r\n  return (!loading && tweetsExist) ? (\r\n    <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={user}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : (\r\n    null\r\n  );\r\n}\r\n\r\nexport default UserTweetList;\r\n","import React from 'react';\r\nimport {ProfileBadgeComponent} from '../profiles'\r\nimport UserTweetList from '../tweets/components/UserTweetList'\r\nimport './styles.css'\r\n\r\nfunction ProfileComponent(props) {\r\n    const {currUser, className, handleLoadNextResponse, nextUrl, callback, setCurrUser} = props;\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"profile__header\">\r\n                <p className=\"profile__content\">{currUser ? currUser.username : \"\"}</p>\r\n            </div>\r\n            <div className=\"profile__body\">\r\n                <div className=\"profile\">\r\n                    <ProfileBadgeComponent currUser={currUser} className={className} handleLoadNextResponse={handleLoadNextResponse} setCurrUser={setCurrUser}/>\r\n                </div>\r\n                <UserTweetList user={currUser} handleLoadNextResponse={handleLoadNextResponse} nextUrl={nextUrl} callback={callback}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import './Navbar.css'\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Navbar(props) {\r\n    const [activeSection, setActiveSection] = useState('Home');\r\n    const {currentUser} = props\r\n\r\n    const navbarContent = [\r\n        \"Home\",\r\n        \"Profile\",\r\n        \"Messages\",\r\n        \"Settings\"\r\n    ]\r\n\r\n    function NavbarListItemComponent({content, currentUser, active}) {\r\n        const [path, setPath] = useState('/');\r\n\r\n        function listIcon() {\r\n            if (content === 'Home') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-home bold\"></i>\r\n                }\r\n                return <i className=\"fas fa-home text-thin\"></i>\r\n            } else if (content === 'Profile') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-user-circle\"></i>\r\n                }\r\n                return <i class=\"far fa-user-circle\"></i>\r\n            } else if (content === 'Settings') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-cog bold\"></i>\r\n                }\r\n                return <i class=\"fas fa-cog\"></i>\r\n            } else if (content === 'Messages') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-envelope\"></i>\r\n                }\r\n                return <i className=\"far fa-envelope\"></i>\r\n            } \r\n        }\r\n\r\n        const handleLinkClick = (event) => {\r\n            event.preventDefault();\r\n            setActiveSection(content);\r\n            window.location.href = path;\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (content === 'Profile') {\r\n                setPath(`/profile/${currentUser ? currentUser.username : \"\"}`)\r\n            } else if (content === 'Settings') {\r\n                setPath('/settings')\r\n            } else if (content === 'Messages') {\r\n                setPath('/messages')\r\n            }\r\n        }, [content, currentUser]);\r\n\r\n    \r\n        return (\r\n            <>\r\n                <Link className=\"navbar__link\" to={path}>\r\n                    <div onClick={handleLinkClick} className={`navbar__list-item ${active && 'bold'}`}>\r\n                        <div className='list-item__icon'>{listIcon()}</div>\r\n                        <div className=\"list-item__content\">{content && content}</div>\r\n                    </div>   \r\n                </Link>     \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    // NAVBAR BELOW\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        var hostName = 'http://localhost:3000/'\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        let path = window.location.href\r\n        if (path !== hostName) {\r\n            window.location.href = '/'\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        let path = window.location.href\r\n\r\n        if (path.includes('settings')) {\r\n            setActiveSection('Settings')\r\n        } else if (path.includes('messages')) {\r\n            setActiveSection('Messages')\r\n        } else if (path.includes('profile')) {\r\n            setActiveSection('Profile')\r\n        } else {\r\n            setActiveSection('Home')\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"navbar__container__outer\">\r\n            <div className=\"navbar__container__inner\">\r\n        \r\n                <ul className='navbar__list'>\r\n                    <li className=\"navbar__header\">\r\n                        <i onClick={handleClick} className=\"fab fa-twitter twitter-icon\"></i>\r\n                    </li>\r\n                    {navbarContent.map((content, idx) => <li><NavbarListItemComponent key={idx} content={content} currentUser={currentUser} active={content === activeSection}/></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n","import {useEffect, useState} from 'react';\r\nimport { apiTweetDetail } from '../../tweets/tweet_functions';\r\nimport Tweet from '../../tweets/components/Tweet'\r\n\r\nfunction TweetDetail({currUser}) {\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n    const [tweet, setTweet] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const tweetCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var path = window.location.pathname\r\n        var idRegex = /(?<tweetid>\\d+)/\r\n        var match = path.match(idRegex)\r\n        let tweetId;\r\n        if (match) {\r\n            tweetId = match.groups.tweetid\r\n        }\r\n        \r\n        let mounted = true;\r\n        const fetchTweet = async () => {\r\n            if (!mounted || didLookupTweet) {return}\r\n            apiTweetDetail(tweetId, tweetCallback)\r\n            setDidLookupTweet(true);\r\n        }\r\n        fetchTweet();   \r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [tweet, didLookupTweet]);\r\n\r\n\r\n    return loading ? (\r\n        <div>\r\n            <Tweet tweet={tweet} currentUser={currUser}/>\r\n        </div>\r\n    ) : <p>Loading...</p>;\r\n  \r\n  \r\n}\r\n\r\nexport default TweetDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\nimport MessageHub from '../components/messages/MessageHub';\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport '../profiles/styles.css'\r\nimport Feed from '../components/feed/Feed'\r\nimport ProfileComponent from '../components/ProfileComponent'\r\nimport Navbar from \"../components/navbar/Navbar\"\r\nimport {TweetDetail} from '../components/tweets'\r\n\r\nfunction Home({currUser, setCurrUser}) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currentSection, setCurrentSection] = useState('Home');\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"home-container\">\r\n          \r\n          <Navbar setCurrentSection={setCurrentSection} currentSection={currentSection} currentUser={currUser}/>\r\n          <Routes>\r\n              <Route exact path='/' element={<Feed currUser={currUser} newTweets={newTweets} setNewTweets={setNewTweets}\r\n              tweets={tweets} setTweets={setTweets} tweetsDidSet={tweetsDidSet} callback={apiTweetListCallback}\r\n              setTweetsDidSet={setTweetsDidSet} nextUrl={nextUrl} handleLoadNextResponse={handleLoadNextResponse}/>}/>\r\n                  \r\n              <Route path='profile/:username' element={<ProfileComponent currUser={currUser} user={currUser} callback={apiTweetListCallback}\r\n                  setCurrUser={setCurrUser} className=\"profile-view\" handleLoadNextResponse={handleLoadNextResponse}/>}/>   \r\n              <Route path=':tweetId' element={<TweetDetail currUser={currUser}/>} />\r\n              <Route exact path='messages' element={<MessageHub />}/>\r\n              <Route exact path='settings'/>\r\n          </Routes>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport {Auth, Home} from './pages';\n// import Navbar from \"./tweets/components/Navbar\"\nimport {apiGetCurrentProfile} from './api/profiles'\n\n\n\nfunction App() {\n  const [currUser, setCurrUser] = useState();\n  const [didFetchUserProfile, setDidFetchUserProfile] = useState(false);\n\n  function profileFetchCallback(response, status) {\n    console.log(\"App.js>>> \", response);\n    if (status === 200) {\n      setCurrUser(response);\n    }\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchProfile = async () => {\n      if (!mounted || didFetchUserProfile) {return}\n      apiGetCurrentProfile(profileFetchCallback);\n      setDidFetchUserProfile(true);\n    }\n\n    fetchProfile()\n    return () => {\n      mounted = false;\n    }\n  }, [didFetchUserProfile]);\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n         \n            <Route exact path='/' element={<Home currUser={currUser} />}/>  \n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\nimport App from './App'\n\nimport TweetList from './tweets/components/TweetList';\nimport ProfileComponent from './components/ProfileComponent';\n\nconst e = React.createElement\nconst app = document.getElementById(\"root\")\nif (app) {\n    ReactDOM.render(e(App, app.dataset), app);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twitter-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileComponent, container.dataset), container);\n})\n\n\n\n\n\n\n"],"sourceRoot":""}