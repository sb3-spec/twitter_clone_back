{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","api/profiles/ApiFunctions.js","profiles/components.js","profiles/badge.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","tweets/components/TweetForm.jsx","tweets/components/TweetFeedList.jsx","tweets/components/TweetList.jsx","tweets/components/UserTweetList.jsx","components/ProfileComponent.jsx","components/Navbar.jsx","pages/Home.jsx","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","status","window","location","href","indexOf","response","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiGetTweetData","tweetId","apiGetProfileData","UserPicture","props","user","hideLink","className","UserLink","children","onClick","event","stopPropagation","UserDisplay","includeFullName","nameDisplay","first_name","last_name","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","handleBackendLookup","alert","useEffect","fetchProfile","a","ProfileBadge","handleFollowCallback","numeral","follower_count","format","following_count","bio","preventDefault","is_following","TweetOptionsBtn","tweet","currentUser","setIsDeleted","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","apiTweetDelete","id","addEventListener","current","contains","target","ref","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","setDidLookupProfile","didLookupTweet","setDidLookupTweet","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","action","currentAction","apiTweetAction","Retweet","parent","console","log","handleProfileCallback","isMounted","fetchData","TweetDetail","currUser","setCurrUser","setTweet","handleTweetLookup","handleCurrUserLookup","apiTweetDetail","TweetForm","textAreaRef","useRef","handleBackendRefresh","tempNewTweets","newTweets","unshift","setNewTweets","handleSubmit","newTweet","callBack","newTweetContent","value","onSubmit","required","variant","TweetFeedList","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","fetchTweetFeed","idx","TweetList","UserTweetList","tweetsExist","setTweetsExist","loading","setLoading","setNextUrl","handleLoadNext","handleGetUserTweets","results","next","mounted","apiGetUserTweets","ProfileComponent","Navbar","setFeedOrProfile","feedOrProfile","filledBtnStyle","emptyBtnStyle","Home","setTweetsDidSet","apiTweetListCallback","concat","handleUserAuthCallback","React","createElement","tweetList","getElementById","ReactDOM","render","dataset","globalTweetList","tweetFeed","customComponent","tweetDetailElements","querySelectorAll","forEach","container"],"mappings":"mUAgBeA,MAhBf,SAAmBC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,GCXJ,SAASU,EAAOC,EAAQC,EAAUC,EAAUC,GACjD,IAAIC,EACAD,IACFC,EAAWC,KAAKC,UAAUH,IAE5B,IAAMI,EAAM,IAAIC,eACVC,EAAG,mCAA+BR,GAClCS,EAAYvB,EAAU,aAC5BoB,EAAII,aAAe,OACnBJ,EAAIK,KAAKZ,EAAQS,GACjBF,EAAIM,iBAAiB,eAAgB,oBACjCH,IAEFH,EAAIM,iBAAiB,mBAAoB,kBACzCN,EAAIM,iBAAiB,cAAeH,IAGtCH,EAAIO,OAAS,WACQ,MAAfP,EAAIQ,UAEuB,IADFC,OAAOC,SAASC,KAAKC,QAAQ,WAEtDH,OAAOC,SAASC,KAAO,kCAG3BhB,EAASK,EAAIa,SAAUb,EAAIQ,SAE7BR,EAAIc,QAAU,WAEZnB,EAAS,CAAC,QAAW,4BAA6B,MAEpDK,EAAIe,KAAKlB,GC1BJ,SAASmB,EAAaC,EAAUtB,EAAUuB,GAC7C,IAAIxB,EAAW,WAEXuB,IACAvB,GAAQ,oBAAiBuB,IAGb,OAAZC,QAAgCC,IAAZD,IACpBxB,EAAWwB,EAAQE,QAAQ,4BAA6B,KAE5D5B,EAAO,MAAOE,EAAUC,GAGrB,SAAS0B,EAAaJ,EAAUtB,EAAUuB,GAC7C,IAAIxB,EAAQ,gBAEI,OAAZwB,QAAgCC,IAAZD,IACpBxB,EAAWwB,EAAQE,QAAQ,4BAA6B,KAE5D5B,EAAO,MAAOE,EAAUC,EAAU,CAAC,SAAYsB,IAgC5C,SAASK,EAAgB3B,EAAU4B,GACtC,IAAI7B,EAAW,gBAEX6B,IACA7B,GAAQ,UAAO6B,IAGnB/B,EAAO,MAAOE,EAAUC,G,2BC9DrB,SAAS6B,EAAkB7B,EAAUsB,EAAUxB,GAGlDD,EAAOC,EAFK,oBAAgBwB,GAAYA,GAEftB,G,WCFhB8B,EAAc,SAACC,GACxB,IAAOC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,SACb,OAAOA,EACH,cAAC,EAAD,CAAUD,KAAMA,EAAMC,SAAUA,EAAhC,SACI,sBAAMC,UAAU,mDAAhB,SACKF,EAAKV,SAAWU,EAAKV,SAAS,GAAK,QAI5C,sBAAMY,UAAU,mDAAhB,SACSF,EAAKV,SAAWU,EAAKV,SAAS,GAAK,OAMvCa,EAAW,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,KAAMI,EAAe,EAAfA,SAO7B,OACA,mCACI,sBAAMF,UAAU,UAAUG,QAPP,SAACC,GACpBA,EAAMC,kBACNzB,OAAOC,SAASC,KAAhB,oBAAoCgB,GAAQA,EAAKV,WAKjD,SACKc,OAMN,SAASI,EAAYT,GACxB,IAAOC,EAAmCD,EAAnCC,KAAMS,EAA6BV,EAA7BU,gBAAiBR,EAAYF,EAAZE,SACxBS,EAAcD,EAAe,UAAMT,EAAKW,WAAX,YAAyBX,EAAKY,WAA9B,UAA+CZ,EAAKV,UAEvF,OACI,qCACKoB,EAAa,IACbT,EAAQ,WAAOD,EAAKV,UAAa,cAAC,EAAD,CAAUU,KAAMA,EAAhB,oBAA2BA,EAAKV,e,qBCpCjEuB,G,MAAwB,SAACd,GAClC,IAAQT,EAAwBS,EAAxBT,SAAUY,EAAcH,EAAdG,UAClB,EAAkCY,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAGMC,EAAsB,SAACjC,EAAUL,GACnCmC,GAAa,GACE,MAAXnC,EACAqC,EAAWhC,GACO,MAAXL,EACPuC,MAAM,iDAENA,MAAM,iBAed,OAXAC,qBAAU,WACF,IACMC,EAAY,uCAAG,sBAAAC,EAAA,4EAEZR,GACDlB,EAAkBsB,EAAqB7B,EAAU,OAHpC,2CAAH,qDAMlBgC,OAGAP,EAAwBE,EAAU,cAACO,EAAD,CAAcxB,KAAMiB,EAASC,WAAYA,EAAYhB,UAAWA,IACpG,kDADc,YAIxB,SAASsB,EAAazB,GAClB,IAAOC,EAA+BD,EAA/BC,KAAMkB,EAAyBnB,EAAzBmB,WAAYhB,EAAaH,EAAbG,UASnBuB,EAAuB,SAACvC,EAAUL,GACrB,MAAXA,EACAqC,EAAWhC,GACO,MAAXL,EACPC,OAAOC,SAASC,KAAO,SAEvBoC,MAAM,uEAId,OAAOpB,EAAO,sBAAKE,UAAS,4BAAuBA,GAArC,UACN,cAAC,EAAD,CAAaF,KAAMA,EAAMC,UAAQ,IACjC,4BACI,cAACO,EAAD,CAAaR,KAAMA,EAAMC,UAAQ,MAErC,sBAAKC,UAAU,6BAAf,UACKwB,IAAQ1B,EAAK2B,gBAAkB,GAAGC,OAAO,MAAO,IAA6B,IAAxB5B,EAAK2B,eAAuB,WAAa,YAAa,IAC3GD,IAAQ1B,EAAK6B,iBAAmB,GAAGD,OAAO,MAAO,IAFtD,eAIA,qBAAK1B,UAAU,WAAf,SAA2BF,EAAKjB,WAChC,qBAAKmB,UAAU,MAAf,SAAsBF,EAAK8B,MAC3B,wBAAQzB,QA5BW,SAACC,GACxBA,EAAMyB,iBACNzB,EAAMC,kBACDP,GACLH,EAAkB4B,EAAsBzB,EAAKV,SAAU,SAwBdY,UAAU,kBAA/C,SAAkEF,EAAKgC,aAAe,WAAa,cAElG,K,MCcEC,MAjFf,YAAgE,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC3C,EAA8BtB,oBAAS,GAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACA,EAA8BxB,mBAAS,IAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAEMC,EAAcC,sBAoBpB,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAqBbC,EAAoB,SAAC3D,EAAUL,GAClB,MAAXA,GACAuD,GAAa,IAIrB,OACI,qBAAKlC,UAAU,SAASG,QAzBD,SAACC,GACxBA,EAAMyB,iBACNzB,EAAMC,kBACN+B,GAAW,GAEK,iBAAZM,GJ+BT,SAAwB5E,EAAU4B,EAASN,GAC9C,IAAIvB,EAAW,WAEX6B,IACA7B,GAAQ,UAAO6B,EAAP,aAOZ/B,EAAO,OAAQE,EAAUC,EAJd,CACP,SAAYsB,IItCJwD,CAAeD,EAAmBX,EAAMa,GAAIZ,IAmBhD,SACI,mBAAGjC,UAAU,kBAAb,SAAgC0C,MAe5C,OA9DA9D,OAAOkE,iBAAiB,aAAa,SAAC1C,GAE9BmC,EAAYQ,UACXR,EAAYQ,QAAQC,SAAS5C,EAAM6C,UAEpC7C,EAAMyB,iBACNzB,EAAMC,kBACN+B,GAAW,OA6CnBjB,qBAAU,WACDa,EAAMlC,OACPkC,EAAMlC,KAAKV,WAAa6C,EACxBK,EAAW,CAAC,eAAD,iBAA2BN,EAAMlC,KAAKV,UAAtC,kBAA6D4C,EAAMlC,KAAKV,YAEnFkD,EAAW,CAAC,eAAgB,sBAEjC,CAACA,EAAYL,EAAaD,EAAMlC,OAG3BqC,EAKJ,qBAAKnC,UAAU,oBAAf,SACI,qBAAKA,UAAU,uBAAuBkD,IAAKX,EAA3C,SACKF,EAAQc,KAAI,SAACC,GAAD,OAAY,cAACX,EAAD,CAAaC,QAASU,EAAQnB,YAAaA,WAN5E,qBAAK9B,QApDmB,SAACkD,GACzBA,EAAEhD,kBACFgD,EAAExB,iBACFO,GAAW,IAiDwBpC,UAAU,yBAA7C,SACI,mBAAGA,UAAU,sC,MCkEVsD,MAnIf,SAASA,EAAT,GAA4D,IAA3CtB,EAA0C,EAA1CA,MAAOhC,EAAmC,EAAnCA,UAAWiC,EAAwB,EAAxBA,YAC/B,GADuD,EAAX5C,QACduB,oBAAS,IAAvC,mBAAO2C,EAAP,KAAgBC,EAAhB,KACA,EAAoC5C,oBAAS,GAA7C,mBAAO6C,EAAP,KAAmBC,EAAnB,KACA,EAA0B9C,mBAASoB,EAAM2B,MAAQ3B,EAAM2B,MAAQ,GAA/D,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAkChD,oBAAS,GAA3C,mBAAOiD,EAAP,KAAkB3B,EAAlB,KACA,EAA8BtB,qBAA9B,mBAAgBI,GAAhB,WACA,EAAgDJ,oBAAS,GAAzD,mBAAyBkD,GAAzB,WACA,EAA4ClD,oBAAS,GAArD,mBAAOmD,EAAP,KAAuBC,EAAvB,KAGMC,EAAa,SAACZ,GAChBA,EAAExB,iBACFwB,EAAEhD,kBACFzB,OAAOC,SAASC,KAAhB,WAA2BkD,EAAMa,KAI/BqB,EAA2B,SAAClF,EAAUL,GACzB,MAAXA,EACAC,OAAOC,SAASC,KAAO,UACL,MAAXH,GACPc,EAAgB0E,EAAyBnC,EAAMa,KAKvD,SAASuB,EAAkBC,EAAQjE,GAC/BA,EAAMC,kBACND,EAAMyB,iBAGN,IAAIyC,EAAgBD,EAEpB,GAAe,SAAXA,EACId,IACAe,EAAgB,eAEjB,GAAe,YAAXD,EAAuBZ,EAC9B,QLVL,SAAwB/D,EAAS2E,EAAQvG,EAAUgC,GACtDnC,EAAO,OAAQ,kBAAmBG,EAAU,CAAC+E,GAAInD,EAAS2E,OAAQA,EAAQjF,SAAUU,IKWhFyE,CAAevC,EAAMa,GAAIyB,EAAeJ,GAG5C,IAAMM,EAAU,SAAC,GAAiB,EAAf1G,SACf,OAAOkE,EAAMyC,OACT,sBAAKtE,QAAU,SAACkD,GAAD,OAAOY,EAAWZ,IAAjC,UACI,oBAAGrD,UAAU,iBAAb,0BAA2C,cAAC,EAAD,CAAUF,KAAMkC,EAAMlC,UACjE,cAAC,EAAD,CAAOkC,MAAOA,EAAMyC,OAAQzE,UAAWgC,EAAMU,QAAU,UAAY,oBAAqBT,YAAaA,OAEzG,MAIFkC,EAA0B,SAACnF,EAAUL,GACxB,MAAXA,GACA+E,EAAc1E,EAAQ,YACtBwE,EAAWxE,EAAQ,SACnB4E,EAAS5E,EAAQ,OACjBgF,GAAkB,GAEQ,IAAtBhF,EAAQ,OACRwE,GAAW,IAIfkB,QAAQC,IAAI3F,EAAUL,IAIxBiG,EAAwB,SAAC5F,EAAUL,GACtB,MAAXA,GACAqC,EAAWhC,GACX8E,GAAoB,IAEpBY,QAAQC,IAAI3F,EAAUL,IAqB9B,OAjBAwC,qBAAU,WACN,IAAI0D,GAAY,EACVC,EAAS,uCAAG,sBAAAzD,EAAA,yDACTwD,EADS,iDAETd,IACDtE,EAAgB0E,EAAyBnC,EAAMa,IAC/ClD,EAAkBiF,EAAuB5C,EAAMlC,KAAKV,SAAU,QAJpD,2CAAH,qDAQf,OADA0F,IACO,WACHD,GAAY,KAEjB,CAACd,EAAgB/B,KAIZ6B,IAAc7B,EAAMU,SAAWV,EAAMyC,SACzC,sBAAKzE,UAAWA,EAAY,qBAAsBG,QAAU,SAACkD,GAAD,OAAOY,EAAWZ,IAA9E,WACMrB,EAAMyC,QACR,sBAAKzE,UAAU,2BAAf,UACI,qBAAKA,UAAU,uBAAf,SACKgC,EAAMlC,KAAO,cAAC,EAAD,UAAU,cAAC,EAAD,CAAaA,KAAMkC,EAAMlC,SAAoB,eAEzE,mBAAGE,UAAU,eAAb,SACI,cAACM,EAAD,CAAaR,KAAMkC,EAAMlC,SAE7B,cAAC,EAAD,CAAiBkC,MAAOA,EAAOC,YAAaA,EAAaC,aAAcA,OAE3E,sBAAKlC,UAAU,kBAAf,UACuB,KAAlBgC,EAAMU,SACP,qBAAK1C,UAAU,wBAAf,SACI,mBAAGA,UAAU,aAAb,mBAA8BgC,EAAMU,aAItCV,EAAMyC,OASR,qBAAKzE,UAAU,oBAAf,SACI,cAACwE,EAAD,MATA,sBAAKxE,UAAU,UAAf,UACI,mBAAGA,UAAWyD,EAAU,6CAAkD,kCAAmCtD,QAAU,SAACkD,GAAD,OAAOe,EAAkB,UAAWf,MAC3J,sBAAKrD,UAAU,sBAAf,UACI,mBAAGA,UAAWuD,EAAU,2CAA6C,kCAAmCpD,QAAU,SAACkD,GAAD,OAAOe,EAAkB,OAAQf,MAClJM,e,MCjFdoB,MAzCf,SAAsBlF,GAClB,IAAQH,EAAYG,EAAZH,QACR,EAAkCkB,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,qBAAhC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAA0BrE,mBAAS,MAAnC,mBAAOoB,EAAP,KAAckD,EAAd,KAEMC,EAAoB,SAACnG,EAAUL,GAElB,MAAXA,GACAuG,EAASlG,IAIXoG,EAAuB,SAACpG,EAAUL,GACrB,MAAXA,GACAsG,EAAYjG,EAASI,WAc7B,OARA+B,qBAAU,YACY,IAAdN,KNAL,SAAwBnB,EAAS5B,GACpC,IAAID,EAAW,WAEX6B,IACA7B,GAAQ,UAAO6B,IAEnB/B,EAAO,MAAOE,EAAUC,GMLhBuH,CAAe3F,EAASyF,GNgBhCxH,EAAO,MAHQ,eMZOyH,GACdtE,GAAa,MAElB,CAACA,EAAcpB,EAASmB,IAEV,OAAVmB,GACH,qBAAKhC,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CAAOgC,MAAOA,EAAOC,YAAa+C,W,6BCIvCM,MApCf,SAAmBzF,GACf,IAAM0F,EAAcC,iBAAO,IAErBC,EAAuB,SAACzG,EAAUL,GAEpC,IAAI+G,EAAa,YAAO7F,EAAM8F,WACf,MAAXhH,GACA+G,EAAcE,QAAQ5G,GACtBa,EAAMgG,aAAaH,GACnBvG,EAAaU,EAAMT,SAAUS,EAAM/B,WAEnCoD,MAAM,4CAIR4E,EAAe,SAACzC,GAElBA,EAAExB,iBACF,IPvBuBkE,EAAUC,EAAUlG,EOuBrCmG,EAAkBV,EAAYxC,QAAQmD,MPvBrBH,EOwBRE,EPxBkBD,EOwBDP,EPxBW3F,EOwBWD,EAAMT,SPvBhEzB,EAAO,OAAQ,kBAAmBqI,EAAU,CAACtD,QAASqD,EAAU3G,SAAUU,IOwBtEyF,EAAYxC,QAAQmD,MAAQ,IAGhC,OACQ,qBAAKlG,UAAU,uBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,uBAAMmG,SAAW,SAAC9C,GAAD,OAAOyC,EAAazC,IAArC,UACI,0BAAUH,IAAKqC,EAAaa,UAAU,EAAMpG,UAAU,iBAEtD,cAAC,IAAD,CAAQqG,QAAQ,UAAhB,2BCWTC,G,MAzCO,SAAC,GAAuH,IAArHX,EAAoH,EAApHA,UAAWE,EAAyG,EAAzGA,aAAcU,EAA2F,EAA3FA,OAAQC,EAAmF,EAAnFA,UAAWpH,EAAwE,EAAxEA,SAAUqH,EAA8D,EAA9DA,aAAc3I,EAAgD,EAAhDA,SAAUuB,EAAsC,EAAtCA,QAASqH,EAA6B,EAA7BA,uBAiC9G,OAxBAvF,qBAAU,WACJwE,EAAUpI,OAAS,IACrBiJ,EAAU,GAAD,mBAAKb,GAAL,YAAmBY,KAC5BV,EAAa,OAGd,CAACF,IAEJxE,qBAAU,WACR,IAAI0D,GAAY,EACV8B,EAAc,uCAAG,sBAAAtF,EAAA,yDAChBwD,EADgB,qDAEA,IAAjB4B,EAFiB,gCAGbjH,EAAaJ,EAAUtB,GAHV,2CAAH,qDAOpB,OADA6I,IACO,WACL9B,GAAY,KAGb,CAAC4B,EAAcrH,EAAUtB,IAIxB,sBAAKkC,UAAU,wBAAf,UACKuG,EAAOpD,KAAI,SAACnB,EAAO4E,GAAS,OAAO,cAAC,EAAD,CAAO5E,MAAOA,EAAO4E,IAAKA,EAA+B9I,SAAUA,EAAUmE,YAAa7C,EAAUC,QAASA,GAA7G,UAAuCuH,EAAvC,mBACvB,OAAZvH,GAAoB,wBAAQW,UAAU,8BAA8BG,QAlCtD,SAACkD,GACtBA,EAAExB,iBACc,OAAZxC,GACFG,EAAaJ,EAAUsH,EAAwBrH,IA+BtB,4BCNhBwH,EA9BG,SAAC,GAAuH,IAArHlB,EAAoH,EAApHA,UAAWE,EAAyG,EAAzGA,aAAcU,EAA2F,EAA3FA,OAAQC,EAAmF,EAAnFA,UAAWpH,EAAwE,EAAxEA,SAAUqH,EAA8D,EAA9DA,aAAc3I,EAAgD,EAAhDA,SAAUuB,EAAsC,EAAtCA,QAASqH,EAA6B,EAA7BA,uBAsB1G,OAbAvF,qBAAU,WACJwE,EAAUpI,OAAS,IACrBiJ,EAAU,GAAD,mBAAKb,GAAL,YAAmBY,KAC5BV,EAAa,OAEd,CAACF,EAAWY,EAAQC,EAAWX,IAElC1E,qBAAU,YACa,IAAjBsF,GACFtH,EAAaC,EAAUtB,KAExB,CAAC2I,EAAcrH,EAAUtB,IAGxB,sBAAKkC,UAAU,wBAAf,UACKuG,EAAOpD,KAAI,SAACnB,EAAO4E,GAAS,OAAO,cAAC,EAAD,CAAO5E,MAAOA,EAAO4E,IAAKA,EAA+B9I,SAAUA,EAAUmE,YAAa7C,GAA1F,UAAuCwH,EAAvC,mBACvB,OAAZvH,GAAoB,wBAAQW,UAAU,8BAA8BG,QAvBtD,SAACkD,GACtBA,EAAExB,iBACc,OAAZxC,GACFF,EAAaC,EAAUsH,EAAwBrH,IAoBtB,2BCkBhByH,MA3Cf,SAAuBjH,GACnB,MAA4Be,mBAAS,IAArC,mBAAO2F,EAAP,KAAeC,EAAf,KACA,EAAsC5F,oBAAS,GAA/C,mBAAOmG,EAAP,KAAoBC,EAApB,KACA,EAA8BpG,oBAAS,GAAvC,mBAAOqG,EAAP,KAAgBC,EAAhB,KACA,EAA8BtG,qBAA9B,mBAAOvB,EAAP,KAAgB8H,EAAhB,KACO/H,EAAsCS,EAAtCT,SAAUgI,EAA4BvH,EAA5BuH,eAAgBtJ,EAAY+B,EAAZ/B,SAG3BuJ,EAAsB,SAACrI,EAAUL,GACnC+F,QAAQC,IAAI3F,EAASsI,SACN,MAAX3I,IACA6H,EAAUxH,EAASsI,SACnBN,GAAe,GACfG,EAAWnI,EAASuI,QAoB9B,OAdEpG,qBAAU,WACN,IAAIqG,GAAU,EAOd,OALIA,KVqDL,SAA0B1J,EAAUsB,EAAUC,GACjD,IAAIxB,EAAW,UAEE,OAAbuB,QAAkCE,IAAbF,IACrBvB,GAAQ,UAAOuB,IAGH,OAAZC,QAAgCC,IAAZD,IACpBxB,EAAWwB,EAAQE,QAAQ,4BAA6B,KAG5D5B,EAAO,MAAOE,EAAUC,GU/DhB2J,CAAiBJ,EAAqBjI,GACtC8H,GAAW,IAGR,WACHM,GAAU,KAEf,CAACN,EAAYE,EAAgBhI,KAGzB6H,GAAWF,EAClB,sBAAK/G,UAAU,wBAAf,UACOuG,EAAOpD,KAAI,SAACnB,EAAO4E,GAAS,OAAO,cAAC,EAAD,CAAO5E,MAAOA,EAAO4E,IAAKA,EAA+B9I,SAAUA,EAAUmE,YAAa7C,GAA1F,UAAuCwH,EAAvC,mBACvB,OAAZvH,GAAoB,wBAAQW,UAAU,8BAA8BG,QAASiH,EAAzD,0BAG3B,MC7BWM,MAZf,SAA0B7H,GACtB,IAAOT,EAAmES,EAAnET,SAAUY,EAAyDH,EAAzDG,UAAW0G,EAA8C7G,EAA9C6G,uBAAwBrH,EAAsBQ,EAAtBR,QAASvB,EAAa+B,EAAb/B,SAG7D,OACI,gCACI,cAAC,EAAD,CAAuBsB,SAAUA,EAAUY,UAAWA,EAAW0G,uBAAwBA,IACzF,cAAC,EAAD,CAAe5G,KAAMV,EAAUsH,uBAAwBA,EAAwBrH,QAASA,EAASvB,SAAUA,Q,MCqBxG6J,MA7Bf,SAAgB9H,GACZ,IAAO+H,EAAmC/H,EAAnC+H,iBAAkBC,EAAiBhI,EAAjBgI,cAenBC,EAAiB,kBACjBC,EAAgB,gBACtB,OACI,sBAAK/H,UAAU,mBAAf,iCAEI,wBAAQG,QAlBc,SAACC,GAC3BA,EAAMyB,iBACNzB,EAAMC,kBAENuH,EAAiB,YAc2B5H,UAA2B,SAAhB6H,EAAyBC,EAAiBC,EAA7F,qBACA,wBAAQ5H,QAZW,SAACC,GACxBA,EAAMyB,iBACNzB,EAAMC,kBAENuH,EAAiB,SAQuB5H,UAA6B,SAAlB6H,EAA2BE,EAAgBD,EAA1F,sBC8EGE,MAxFf,SAAcnI,GACV,MAAkCe,mBAAS,IAA3C,mBAAO+E,EAAP,KAAkBE,EAAlB,KACA,EAA4BjF,mBAAS,IAArC,mBAAO2F,EAAP,KAAeC,EAAf,KACA,EAAwC5F,oBAAS,GAAjD,mBAAO6F,EAAP,KAAqBwB,EAArB,KACA,EAA8BrH,qBAA9B,mBAAOvB,EAAP,KAAgB8H,EAAhB,KACA,EAAgCvG,qBAAhC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAA0CrE,mBAAS,QAAnD,mBAAOiH,EAAP,KAAsBD,EAAtB,KAEQxI,EAAaS,EAAbT,SAIR,SAAS8I,EAAsBlJ,EAAUL,GACtB,MAAXA,GACF6H,EAAUxH,EAASsI,SACnBW,GAAgB,GAChBd,EAAWnI,EAASuI,OAEpBrG,MAAM,sBAMZ,IAAMwF,EAAyB,SAAC1H,EAAUL,GACtC,GAAe,MAAXA,EAAgB,CAChB,IAAMgH,EAAY,YAAIY,GAAQ4B,OAAOnJ,EAASsI,SAC9Cd,EAAUb,GACVwB,EAAWnI,EAASuI,WAEpBrG,MAAM,uBAIRkH,EAAyB,SAACpJ,EAAUL,GACtCsG,EAAYjG,EAAQ,WAMxB,OAHAmC,qBAAU,WACNxB,EAAkByI,EAAwBhJ,EAAU,SACrD,CAACA,IAEA,sBAAKY,UAAU,iBAAf,UACI,cAAC,EAAD,CAAQ4H,iBAAkBA,EAAkBC,cAAeA,IACxC,SAAlBA,EACD,sBAAK7H,UAAU,eAAf,UACI,cAAC,EAAD,CACIZ,SAAU4F,EACVW,UAAWA,EACXE,aAAcA,EACdU,OAAQA,EACRC,UAAWA,EACXC,aAAcA,EACd3I,SAAUoK,IAEZlD,EAaF,cAAC,EAAD,CACIW,UAAWA,EACXE,aAAcA,EACdU,OAAQA,EACRC,UAAWA,EACXpH,SAAU4F,EACVyB,aAAcA,EACdwB,gBAAiBA,EACjBnK,SAAUoK,EACV7I,QAASA,EACTqH,uBAAwBA,IAtB5B,cAAC,EAAD,CACIf,UAAWA,EACXE,aAAcA,EACdU,OAAQA,EACRC,UAAWA,EACXpH,SAAU4F,EACVyB,aAAcA,EACdwB,gBAAiBA,EACjBnK,SAAUoK,EACV7I,QAASA,EACTqH,uBAAwBA,OAiBhC,cAAC,EAAD,CAAkBtH,SAAUA,EAAUtB,SAAUoK,EAAsBlI,UAAU,eAAe0G,uBAAwBA,QCzF7HrD,EAAIgF,IAAMC,cACVC,EAAYrL,SAASsL,eAAe,QACtCD,GACAE,IAASC,OAAOrF,EAAE2E,EAAMO,EAAUI,SAAUJ,GAGhD,IAAMK,EAAkB1L,SAASsL,eAAe,iBAC5CI,GACAH,IAASC,OAAO,cAAC,EAAD,IAAeE,GAGnC,IAAMC,EAAY3L,SAASsL,eAAe,cAC1C,GAAIK,EAAW,CACX,IAAMC,EAAkBzF,EAAEiD,EAAeuC,EAAUF,SACnDF,IAASC,OAAOI,EAAiBD,GAGrC,IAAME,EAAsB7L,SAASsL,eAAe,qBAEhDO,GACAN,IAASC,OAAOrF,EAAE0B,EAAagE,EAAoBJ,SAAUI,GAGhC7L,SAAS8L,iBAAiB,0BAElCC,SAAQ,SAAAC,GAC7BT,IAASC,OACLrF,EAAE1C,EAAuBuI,EAAUP,SAAUO,Q","file":"static/js/main.14edc1d8.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n       if (loginLocationIndex === -1) {\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n       }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetUserTweets(callback, username, nextUrl) {\r\n    let endpoint = '/tweets'\r\n\r\n    if (username !== null && username !== undefined) {\r\n        endpoint += `${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiGetProfileData(callback, username, method) {\r\n    let endpoint = `/profiles/${username && username}`\r\n\r\n    lookup(method, endpoint, callback)\r\n}\r\n\r\nexport function apiToggleFollow(callback, username) {\r\n    let endpoint = `/profiles/${username && username}/follow`\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, hideLink} = props\r\n    return hideLink ? ( \r\n        <UserLink user={user} hideLink={hideLink}>\r\n            <span className=\"px-3 py-2 my-2 rounded-circle bg-dark text-white\">\r\n                {user.username ? user.username[0] : 'a'}\r\n            </span>\r\n        </UserLink>\r\n    ) : (\r\n        <span className=\"px-3 py-2 my-2 rounded-circle bg-dark text-white\">\r\n                {user.username ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport const UserLink = ({ user, children }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profiles/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>\r\n            {children}\r\n        </span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name}` : `${user.username}`\r\n\r\n    return (\r\n        <>\r\n            {nameDisplay}{' '}\r\n            {hideLink ? `@${user.username}` : <UserLink user={user}>{`@${user.username}`}</UserLink>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {UserPicture, UserDisplay} from './components'\r\nimport {apiGetProfileData} from '../api/profiles'\r\nimport numeral from 'numeral'\r\nimport './styles.css'\r\n\r\nexport const ProfileBadgeComponent = (props) => {\r\n    const { username, className } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        setDidLookup(true);\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 404) {\r\n            alert('There was an error finding the requested user')\r\n        } else {\r\n            alert(\"server issue\")\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n            let mounted = true;\r\n            const fetchProfile = async () => {\r\n                if (!mounted) {return}\r\n                if (!didLookup) {\r\n                    apiGetProfileData(handleBackendLookup, username, \"GET\");\r\n                }\r\n            }\r\n            fetchProfile();          \r\n    });\r\n\r\n    return !didLookup ? \"Loading\" : profile ? <ProfileBadge user={profile} setProfile={setProfile} className={className}/> \r\n        : <span>User not found</span>\r\n}\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, setProfile, className} = props\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!user) {return}\r\n        apiGetProfileData(handleFollowCallback, user.username, \"POST\");\r\n    }\r\n\r\n    const handleFollowCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 403) {\r\n            window.location.href = '/login'\r\n        } else {\r\n            alert(\"We could not find the profile in question. Please try again later.\")\r\n        }\r\n    }\r\n\r\n    return user ? <div className={`profile-container ${className}`}>\r\n            <UserPicture user={user} hideLink />\r\n            <p>\r\n                <UserDisplay user={user} hideLink />\r\n            </p>\r\n            <div className=\"follower-following-display\">\r\n                {numeral(user.follower_count || 0).format(\"0a\")}{\" \"}{user.follower_count === 1 ? 'Follower' : 'Followers'}{\" \"}\r\n                {numeral(user.following_count || 0).format(\"0a\")}{\" \"}Following\r\n            </div>\r\n            <div className='location'>{user.location}</div>\r\n            <div className='bio'>{user.bio}</div>\r\n            <button onClick={handleFollowToggle} className=\"btn btn-primary\">{user.is_following ? 'Unfollow' : 'Follow'}</button>\r\n            \r\n    </div> : null\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { apiGetProfileData } from '../../api/profiles'\r\nimport { UserLink, UserPicture, UserDisplay } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, className, currentUser, nextUrl }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n    const [didLookupProfile, setDidLookupProfile] = useState(false);\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user} /></p>\r\n                <Tweet tweet={tweet.parent} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setDidRetweet(response['didRetweet']);\r\n            setDidLike(response['didLike']);\r\n            setLikes(response['likes']);\r\n            setDidLookupTweet(true);\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    const handleProfileCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response);\r\n            setDidLookupProfile(true)\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchData = async () => {\r\n            if (!isMounted) {return}\r\n            if (!didLookupTweet) {\r\n                apiGetTweetData(handleTweetDataCallback, tweet.id);\r\n                apiGetProfileData(handleProfileCallback, tweet.user.username, \"GET\");\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [didLookupTweet, tweet]);  \r\n\r\n\r\n\r\n    return !isDeleted && (tweet.content || tweet.parent) && (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    {tweet.user ? <UserLink><UserPicture user={tweet.user}/></UserLink>: \"Loading...\"}\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserDisplay user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail } from '../tweet_functions'\r\nimport {apiUserLookup} from '../tweet_functions' \r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [currUser, setCurrUser] = useState();\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n    const handleTweetLookup = (response, status) => {\r\n\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    const handleCurrUserLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response.username);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleTweetLookup);\r\n            apiUserLookup(handleCurrUserLookup);\r\n            setDidLookup(true);  \r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    <Tweet tweet={tweet} currentUser={currUser}/>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import { Button } from 'bootstrap-react'\r\nimport React, { useRef } from 'react'\r\nimport { apiTweetCreate, apiTweetList } from '../tweet_functions'\r\n\r\nimport '../styles/TweetForm.css'\r\n\r\n\r\nfunction TweetForm(props) {\r\n    const textAreaRef = useRef('')\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        // backend api request\r\n        e.preventDefault()\r\n        const newTweetContent = textAreaRef.current.value\r\n        apiTweetCreate(newTweetContent, handleBackendRefresh, props.username)\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n            <div className=\"tweet-form-container\">\r\n                <div className=\"form_container\">\r\n                    <form onSubmit={((e) => handleSubmit(e))}>\r\n                        <textarea ref={textAreaRef} required={true} className=\"form-control\">\r\n                        </textarea>\r\n                        <Button variant=\"primary\">Tweet</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const fetchTweetFeed = async () => {\r\n      if (!isMounted) {return}\r\n      if (tweetsDidSet === false) {\r\n        await apiTweetFeed(username, callback);\r\n      }\r\n    }\r\n    fetchTweetFeed();\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n    \r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetFeedList","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetList","import React, {useState, useEffect} from 'react';\r\nimport {apiGetUserTweets} from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nfunction UserTweetList(props) {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsExist, setTweetsExist] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const {username, handleLoadNext, callback} = props;\r\n\r\n\r\n    const handleGetUserTweets = (response, status) => {\r\n        console.log(response.results)\r\n        if (status === 200) {\r\n            setTweets(response.results);\r\n            setTweetsExist(true);\r\n            setNextUrl(response.next)\r\n        } else if (status === 202) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n        if (mounted) {\r\n            apiGetUserTweets(handleGetUserTweets, username);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [setLoading, handleLoadNext, username])\r\n\r\n\r\n  return (!loading && tweetsExist) ? (\r\n    <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : (\r\n    null\r\n  );\r\n}\r\n\r\nexport default UserTweetList;\r\n","import React from 'react';\r\nimport {ProfileBadgeComponent} from '../profiles'\r\nimport UserTweetList from '../tweets/components/UserTweetList'\r\n\r\nfunction ProfileComponent(props) {\r\n    const {username, className, handleLoadNextResponse, nextUrl, callback,} = props;\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <ProfileBadgeComponent username={username} className={className} handleLoadNextResponse={handleLoadNextResponse}/>\r\n            <UserTweetList user={username} handleLoadNextResponse={handleLoadNextResponse} nextUrl={nextUrl} callback={callback}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import React, {useState} from 'react'\r\nimport './styles.css'\r\n\r\nfunction Navbar(props) {\r\n    const {setFeedOrProfile, feedOrProfile} = props\r\n\r\n    const handleProfileBtnClick = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        setFeedOrProfile('profile')\r\n    }\r\n\r\n    const handleHomeBtnClick = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        setFeedOrProfile('feed')\r\n    }\r\n    const filledBtnStyle = \"btn btn-primary\"\r\n    const emptyBtnStyle = \"btn btn-error\"\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            Navbar, Coming soon!\r\n            <button onClick={handleProfileBtnClick} className={feedOrProfile==='feed' ? filledBtnStyle : emptyBtnStyle}>Profile</button>\r\n            <button onClick={handleHomeBtnClick}className={feedOrProfile === 'feed' ? emptyBtnStyle : filledBtnStyle}>Home</button>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport '../profiles/styles.css'\r\nimport TweetForm from \"../tweets/components/TweetForm\"\r\nimport TweetFeedList from \"../tweets/components/TweetFeedList\"\r\nimport TweetList from \"../tweets/components/TweetList\"\r\nimport ProfileComponent from '../components/ProfileComponent'\r\nimport { apiGetProfileData } from '../api/profiles'\r\nimport {Navbar} from \"../components\"\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nfunction Home(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currUser, setCurrUser] = useState();\r\n    const [feedOrProfile, setFeedOrProfile] = useState('feed');\r\n\r\n    const { username } = props\r\n\r\n\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n    const handleUserAuthCallback = (response, status) => {\r\n        setCurrUser(response['username'])\r\n    };\r\n\r\n    useEffect(() => {\r\n        apiGetProfileData(handleUserAuthCallback, username, 'GET')\r\n    }, [username])\r\n    return (\r\n        <div className=\"home-container\">\r\n            <Navbar setFeedOrProfile={setFeedOrProfile} feedOrProfile={feedOrProfile}/>\r\n            {feedOrProfile === 'feed' ? \r\n            <div className=\"twitter_feed\">\r\n                <TweetForm\r\n                    username={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                />\r\n                {!currUser ?\r\n                <TweetList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> :\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />}\r\n                \r\n            </div>\r\n            : \r\n            <ProfileComponent username={username} callback={apiTweetListCallback} className=\"profile-view\" handleLoadNextResponse={handleLoadNextResponse}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\n\nimport Home from './pages/Home';\nimport TweetFeedList from './tweets/components/TweetFeedList';\nimport TweetList from './tweets/components/TweetList';\nimport { ProfileBadgeComponent } from './profiles';\n\nconst e = React.createElement\nconst tweetList = document.getElementById(\"root\")\nif (tweetList) {\n    ReactDOM.render(e(Home, tweetList.dataset), tweetList);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\nconst tweetFeed = document.getElementById(\"tweet_feed\")\nif (tweetFeed) {\n    const customComponent = e(TweetFeedList, tweetFeed.dataset)\n    ReactDOM.render(customComponent, tweetFeed);\n}\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twitter-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), container);\n})\n\n\n\n"],"sourceRoot":""}