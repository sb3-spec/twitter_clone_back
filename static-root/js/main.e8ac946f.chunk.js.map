{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","profiles/components.js","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","tweets/components/TweetForm.jsx","tweets/components/Sidebar.jsx","tweets/components/TweetFeedList.jsx","pages/Home.jsx","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","status","detail","response","loginLocationIndex","window","location","href","indexOf","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","UserPicture","user","className","UserLink","onClick","event","stopPropagation","Tweet","tweet","currentUser","useState","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","myCallback","handleLink","e","preventDefault","id","handleBackendActionEvent","console","log","prevState","is_logged_in","handleTweetAction","action","currentAction","tweetId","apiTweetAction","Retweet","parent","useEffect","localStorage","getItem","parse","likeData","retweetData","setItem","content","TweetDetail","props","didLookup","setDidLookup","setTweet","handleBackendLookup","alert","apiTweetDetail","TweetForm","textAreaRef","useRef","handleBackendRefresh","tempNewTweets","newTweets","unshift","setNewTweets","handleSubmit","newTweet","callBack","newTweetContent","current","value","onSubmit","ref","required","variant","Sidebar","TweetFeedList","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","map","idx","Home","setTweetsDidSet","setNextUrl","apiTweetListCallback","results","next","concat","React","createElement","tweetList","getElementById","MyComponent","dataset","ReactDOM","render","tweetDetailElements"],"mappings":"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","file":"static/js/main.e8ac946f.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n       if (detail === 'Authentication credentials were not provided.' && loginLocationIndex === -1) {\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n       }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = '/tweets/feed/'\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\n","export const UserPicture = ({ user }) => {\r\n    return (\r\n        <span className=\"px-3 py-2 my-2 rounded-circle bg-dark text-white\">\r\n            {user.username[0]}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport const UserLink = ({ user }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profiles/${user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>@{user.username}</span>\r\n    </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiTweetList } from '../tweet_functions'\r\nimport { UserLink, UserPicture } from '../../profiles'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, callback, className, currentUser }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const myCallback = callback \r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        console.log(status, response)\r\n        if (status === 201 || status === 200) {\r\n            setLikes(response.likes)\r\n            setDidLike((prevState) => !prevState)\r\n            if (status === 201) {\r\n                setDidRetweet((prevState) => !prevState)\r\n            } else if (status === 200 && response.is_logged_in) {\r\n                window.location.href = '/'\r\n            }\r\n            apiTweetList(currentUser, callback)\r\n        } else {\r\n            setDidLike((prevState) => !prevState)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }   \r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent, currentUser)\r\n    }\r\n\r\n    const Retweet = () => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user} /></p>\r\n                <div className=''>\r\n                    <Tweet tweet={tweet.parent} callback={myCallback} className=\"retweet\" currentUser={currentUser} />\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setLikes(tweet.likes)\r\n    }, [tweet.likes]);\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem('tweetActionData')\r\n\r\n        if (data) {\r\n            const { likeData, retweetData } = JSON.parse(data)\r\n\r\n            if (likeData) {\r\n                console.log(likeData)\r\n                setDidLike(likeData)\r\n            }\r\n    \r\n            if (retweetData) {\r\n                setDidRetweet(retweetData)\r\n            }\r\n        }\r\n\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let data = {\r\n            \"likeData\": didLike,\r\n            \"retweetData\": didRetweet\r\n        }\r\n\r\n        data = JSON.stringify(data)\r\n        localStorage.setItem('tweetActionData', data)\r\n    })\r\n\r\n    return (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    <UserPicture user={tweet.user} />\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserLink user={tweet.user} /> \r\n                </p>\r\n                            \r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\"><i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>{likes}</div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet />\r\n                </div>}  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail } from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n            console.log(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet. Please try again.\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    \r\n                    <Tweet tweet={tweet} />\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import { Button } from 'bootstrap-react'\r\nimport React, { useRef } from 'react'\r\nimport { apiTweetCreate, apiTweetList } from '../tweet_functions'\r\n\r\nimport '../styles/TweetForm.css'\r\n\r\n\r\nfunction TweetForm(props) {\r\n    const textAreaRef = useRef('')\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        // backend api request\r\n        e.preventDefault()\r\n        const newTweetContent = textAreaRef.current.value\r\n        apiTweetCreate(newTweetContent, handleBackendRefresh, props.username)\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n            <div className=\"tweet-form-container\">\r\n                <div className=\"form_container\">\r\n                    <form onSubmit={((e) => handleSubmit(e))}>\r\n                        <textarea ref={textAreaRef} required={true} className=\"form-control\">\r\n                        </textarea>\r\n                        <Button variant=\"primary\">Tweet</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm\r\n","function Sidebar() {\r\n    return (\r\n        <div>\r\n            Hello World\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetList.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetFeed(callback)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tweetsDidSet, username]);\r\n\r\n  return (\r\n      <div className=\"tweet_list__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetFeedList","import React, { useState } from 'react'\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport TweetForm from \"../tweets/components/TweetForm\"\r\nimport Sidebar from \"../tweets/components/Sidebar\"\r\nimport TweetFeedList from \"../tweets/components/TweetFeedList\"\r\n\r\nfunction Home(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <Sidebar />\r\n            <div className=\"twitter_feed\">\r\n                <TweetForm  \r\n                    username={props.username}\r\n                    newTweets={newTweets} \r\n                    setNewTweets={setNewTweets} \r\n                    tweets={tweets} \r\n                    setTweets={setTweets} \r\n                    tweetsDidSet={tweetsDidSet} \r\n                    callback={apiTweetListCallback}\r\n                />\r\n                {/* <TweetList \r\n                    newTweets={newTweets} \r\n                    setNewTweets={setNewTweets} \r\n                    tweets={tweets} \r\n                    setTweets={setTweets} \r\n                    username={props.username}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> */}\r\n                <TweetFeedList \r\n                    newTweets={newTweets} \r\n                    setNewTweets={setNewTweets} \r\n                    tweets={tweets} \r\n                    setTweets={setTweets} \r\n                    username={props.username}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\n\nimport Home from './pages/Home';\n\n\n// const appEl = document.getElementById('root')\n// const e = document.createElement\n// if (appEl) {\n//     MyComponent = e\n//     ReactDOM.render(<App />, appEl);\n// }\nconst e = React.createElement\nconst tweetList = document.getElementById(\"root\")\nif (tweetList) {\n    const MyComponent = e(Home, tweetList.dataset)\n    ReactDOM.render(MyComponent, tweetList);\n}\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\n\n\n"],"sourceRoot":""}