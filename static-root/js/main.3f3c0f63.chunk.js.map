{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","api/profiles/ApiFunctions.js","profiles/components.js","media/forest_banner.jpg","components/profile-edit/ProfileEdit.jsx","profiles/badge.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","components/messages/MessageHub.jsx","tweets/components/TweetFeedList.jsx","components/tweet-form/TweetForm.jsx","tweets/components/TweetList.jsx","components/feed/Feed.jsx","tweets/components/UserTweetList.jsx","components/ProfileComponent.jsx","components/navbar/Navbar.jsx","pages/Home.jsx","components/auth/Login.jsx","api/auth/functions.js","components/auth/Registration.jsx","pages/Auth.jsx","App.js","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","response","status","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiGetTweetData","tweetId","apiGetUserTweets","apiGetProfileData","UserPicture","props","user","hideLink","isProfile","console","log","className","UserLink","children","onClick","event","stopPropagation","window","location","href","UserDisplay","includeFullName","nameDisplay","first_name","last_name","UserImages","banner","src","alt","ProfileEdit","closeModal","usernameRef","useRef","bioRef","bio","locationRef","dataHasChanged","current","value","class","preventDefault","apiEditProfile","ref","ProfileBadgeComponent","currUser","setCurrUser","setProfile","ProfileBadge","useState","isEditingProfile","setIsEditingProfile","handleToggleEdit","prevState","numeral","following_count","format","follower_count","TweetOptionsBtn","tweet","currentUser","setIsDeleted","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","apiTweetDelete","id","addEventListener","contains","target","useEffect","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","didLookupProfile","setDidLookupProfile","didLookupTweet","setDidLookupTweet","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","action","currentAction","apiTweetAction","Retweet","parent","handleProfileCallback","isMounted","fetchData","a","TweetDetail","didLookup","setDidLookup","setTweet","handleTweetLookup","handleCurrUserLookup","tweet_id","apiTweetDetail","MessageHub","TweetFeedList","newTweets","setNewTweets","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","fetchTweetFeed","idx","TweetForm","textAreaRef","handleBackendRefresh","tempNewTweets","unshift","alert","placeholder","required","newTweetContent","TweetList","Feed","setTweetsDidSet","UserTweetList","tweetsExist","setTweetsExist","loading","setLoading","setNextUrl","handleGetUserTweets","results","next","mounted","ProfileComponent","Navbar","NavbarListItemComponent","path","setPath","activeSection","setActiveSection","isActive","setIsActive","includes","to","Home","currentSection","setCurrentSection","apiTweetListCallback","concat","exact","element","Login","error","setError","passwordRef","loginCallback","onSubmit","userData","apiLogin","type","Registration","Auth","isLogin","setIsLogin","handleClick","App","didFetchUserProfile","setDidFetchUserProfile","profileFetchCallback","fetchProfile","React","createElement","app","getElementById","ReactDOM","render","dataset","globalTweetList","tweetDetailElements","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.3f3c0f63.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    // if (xhr.status === 403) {\r\n    //   const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n    //    if (loginLocationIndex === -1) {\r\n    //     window.location.href = \"/login?showLoginRequired=true\"\r\n    //    }\r\n    // }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {tweet_id: tweetId})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetUserTweets(callback, username, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username !== null && username !== undefined) {\r\n        endpoint += `${username}/tweets/`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiGetProfileData(callback, username, method) {\r\n    let endpoint = `/profiles/${username && username}`\r\n\r\n    lookup(method, endpoint, callback)\r\n}\r\n\r\nexport function apiToggleFollow(callback, username) {\r\n    let endpoint = `/profiles/${username && username}/follow`\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiEditProfile(callback, data) {\r\n    let endpoint = `/profiles/edit`\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetCurrentProfile(callback) {\r\n    let endpoint = `/profiles/auth`\r\n    lookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, hideLink, isProfile} = props\r\n    if (isProfile) {console.log('this is the profile pic')}\r\n    return hideLink ? ( \r\n        <div className=\"profile__picture__shell\">\r\n            <UserLink user={user} hideLink={hideLink}>\r\n                <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large bg-dark text-white rounded-circle\"}>\r\n                    {user.username ? user.username[0] : 'a'}\r\n                </span>\r\n            </UserLink>\r\n        </div>\r\n    ) : (\r\n        <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large\"}> \r\n                {user.username ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport const UserLink = ({ user, children }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profile/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>\r\n            {children}\r\n        </span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name}` : `${user.username}`\r\n\r\n    return (\r\n        <>\r\n            {nameDisplay}{' '}\r\n            {hideLink ? `@${user.username}` : <UserLink user={user}>{`@${user.username}`}</UserLink>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport function UserImages(props) {\r\n    const {user, banner} = props\r\n    return (\r\n        <div className=\"images__container\">\r\n            <div className=\"profile__banner_picture\"><img className=\"banner-img\" src={banner} alt=\"mountain in front of sunset\"/></div>\r\n            <div className=\"profile__picture\">\r\n                <UserPicture user={user} isProfile hideLink />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/forest_banner.2143f87a.jpg\";","import React, {useRef} from 'react';\r\nimport {UserImages} from '../../profiles';\r\nimport {apiEditProfile} from '../../api/profiles';\r\n\r\nimport './styles.css';\r\nimport banner from '../../media/forest_banner.jpg';\r\n\r\nfunction ProfileEdit(props) {\r\n    const {user, closeModal, callback} = props\r\n    const usernameRef = useRef(user.username);\r\n    const bioRef = useRef(user.bio);\r\n    const locationRef = useRef(user.location);\r\n\r\n   \r\n\r\n\r\n\r\n    const saveProfile = (event) => {\r\n        event.preventDefault();\r\n        if (dataHasChanged()) {\r\n            const data = {\r\n                \"username\": usernameRef.current.value,\r\n                \"bio\": bioRef.current.value,\r\n                \"location\": locationRef.current.value\r\n            }\r\n            apiEditProfile(callback, data);\r\n\r\n        }\r\n        closeModal(event);\r\n    }\r\n\r\n    const dataHasChanged = () => {\r\n        console.log(usernameRef.current.value, user.username);\r\n        if (usernameRef.current.value !== user.username) {\r\n            return true\r\n        }\r\n        if (bioRef.current.value !== user.bio) {\r\n            return true\r\n        }\r\n        if (locationRef.current.value !== user.location) {\r\n            return true\r\n        }\r\n        // const data = [usernameRef.current, bioRef.current, locationRef.current]\r\n        // const userData = [user.username, user.bio, user.location]\r\n        // data.map((data, i) => {\r\n        //     console.log(data, i);\r\n        //     if (data !== userData[i]) {\r\n        //         return true\r\n        //     }\r\n        // });\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-container\">\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"edit-profile__container\">\r\n                <div className=\"edit__banner\">\r\n                    <div className=\"close-modal__container\">\r\n                        <span className=\"close-modal__bg\" onClick={closeModal}><i class=\"fas fa-times close-modal\"></i></span>\r\n                    </div>\r\n                    <div className=\"banner__text__container\">\r\n                        <p className=\"banner__text\">Edit Profile</p>\r\n                    </div>\r\n                    <button className=\"save-btn\" onClick={saveProfile}>Save</button>\r\n                </div>\r\n                <UserImages user={user} banner={banner}/>\r\n                <div className=\"profile-forms\">\r\n                    <form>\r\n                        <div className=\"form-container\">\r\n                            <label>Username</label>\r\n                            <textarea className=\"edit username\" ref={usernameRef}>{usernameRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label>Bio</label>\r\n                            <textarea className=\"edit bio\" ref={bioRef}>{bioRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container small-form\">\r\n                            <label>Location</label>\r\n                            <textarea className=\"edit location\" ref={locationRef}>{locationRef.current}</textarea>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {UserPicture, UserImages} from './components'\r\nimport {apiGetProfileData} from '../api/profiles'\r\nimport numeral from 'numeral'\r\n\r\nimport banner from '../media/forest_banner.jpg'\r\nimport './styles.css'\r\nimport ProfileEdit from '../components/profile-edit/ProfileEdit'\r\n\r\nexport const ProfileBadgeComponent = (props) => {\r\n    const { currUser, className, setCurrUser, setProfile } = props\r\n\r\n    console.log(currUser)\r\n    return currUser ? <ProfileBadge user={currUser} setProfile={setProfile} className={className} setCurrUser={setCurrUser} /> : <span>User Not Found</span>;\r\n}\r\n\r\nfunction ProfileBadge(props) {\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n    const {user, setProfile, className, setCurrUser} = props\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!user) {return}\r\n        apiGetProfileData(handleFollowCallback, user.username, \"POST\");\r\n    }\r\n\r\n    const handleToggleEdit = (event) => {\r\n        event.preventDefault();\r\n        setIsEditingProfile((prevState) => !prevState);\r\n    }\r\n\r\n    const handleFollowCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 403) {\r\n            window.location.href = '/login'\r\n        } else {\r\n            alert(\"We could not find the profile in question. Please try again later.\")\r\n        }\r\n    }\r\n\r\n    const handleProfileEditCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response);\r\n        }\r\n        window.location.href = `/profile/${response.username}`\r\n    }\r\n\r\n\r\n    return user ? (\r\n        <div className={`profile-container ${className}`}>\r\n            <UserImages user={user} banner={banner}/>\r\n            \r\n            <div className=\"profile__info\">\r\n                <h3>{user.username}</h3>\r\n                <p>{`@${user.username}`}</p>\r\n\r\n                <div className='bio'>{user.bio}</div>\r\n                <div className='location'>{user.location}</div>\r\n\r\n                <div className=\"follower-following-display\">\r\n                   <div className=\"following-count\">\r\n                       <p className=\"number\">{numeral(user.following_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}Following{\" \"}</p>\r\n                   </div>\r\n                    <div className=\"follower-count\">\r\n                        <p className=\"number\">{numeral(user.follower_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}{user.follower_count === 1 ? 'Follower' : 'Followers'}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"profile__buttons\">\r\n                {true ? \r\n                <button onClick={handleToggleEdit} className=\"profile__action-button\">{'Edit Profile'}</button> \r\n                : <button onClick={handleFollowToggle} className=\"profile__action-button\">{user.is_following ? 'Unfollow' : 'Follow'}</button>}                \r\n                          \r\n            </div>\r\n            {isEditingProfile && <ProfileEdit user={user} closeModal={handleToggleEdit} setProfile={setProfile} callback={handleProfileEditCallback}/>}\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { apiGetProfileData } from '../../api/profiles'\r\nimport { UserLink, UserPicture, UserDisplay } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, className, currentUser, nextUrl }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n    const [didLookupProfile, setDidLookupProfile] = useState(false);\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                {console.log(tweet.user)}\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user}>{tweet.user.username}</UserLink></p>\r\n                <Tweet tweet={tweet.parent} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setDidRetweet(response['didRetweet']);\r\n            setDidLike(response['didLike']);\r\n            setLikes(response['likes']);\r\n            setDidLookupTweet(true);\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    const handleProfileCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response);\r\n            setDidLookupProfile(true)\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchData = async () => {\r\n            if (!isMounted) {return}\r\n            if (!didLookupTweet) {\r\n                apiGetTweetData(handleTweetDataCallback, tweet.id);\r\n            }\r\n            if (!didLookupProfile) {\r\n                apiGetProfileData(handleProfileCallback, tweet.user.username, \"GET\");\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [didLookupProfile, didLookupTweet, tweet]);  \r\n\r\n\r\n\r\n    return !isDeleted && (tweet.content || tweet.parent) && (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    {tweet.user ? <UserLink><UserPicture user={tweet.user}/></UserLink>: \"Loading...\"}\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserDisplay user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail } from '../tweet_functions'\r\nimport {apiUserLookup} from '../tweet_functions' \r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [currUser, setCurrUser] = useState();\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n    const handleTweetLookup = (response, status) => {\r\n\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    const handleCurrUserLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response.username);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleTweetLookup);\r\n            apiUserLookup(handleCurrUserLookup);\r\n            setDidLookup(true);  \r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    <Tweet tweet={tweet} currentUser={currUser}/>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import React from 'react';\r\n\r\nfunction MessageHub() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default MessageHub;\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets]);\r\n      setNewTweets([]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const fetchTweetFeed = async () => {\r\n      if (!isMounted) {return}\r\n      if (!tweetsDidSet) {\r\n        apiTweetFeed(username, callback);\r\n      }\r\n    }\r\n    fetchTweetFeed();\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n    \r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetFeedList;","import React, {useRef} from 'react';\r\nimport {apiTweetList, apiTweetCreate} from '../../tweets/tweet_functions';\r\nimport {UserPicture} from '../../profiles';\r\nimport './styles.css'\r\n\r\nfunction TweetForm(props) {\r\n    const {currUser} = props\r\n    console.log(currUser);\r\n    const username = currUser  && currUser.username\r\n    const textAreaRef = useRef('')\r\n\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTweetContent = textAreaRef.current.value\r\n        if (newTweetContent !== '') {\r\n            apiTweetCreate(newTweetContent, handleBackendRefresh, username);\r\n        }\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"tweet-form__container-outer\">\r\n                <div className=\"tweet-form__container-inner\">\r\n                    <div className=\"profile__container\">\r\n                        <UserPicture user={currUser ? currUser : {\"username\":\"anon\"} }/>\r\n                    </div>\r\n                    <form className=\"tweet-form\">\r\n                        <label className=\"\"></label>\r\n                        <textarea placeholder=\"What's happening?\" ref={textAreaRef} required={true} className=\"tweet-form__textarea\">\r\n                        </textarea>\r\n                    </form>\r\n                </div>\r\n                <div className=\"tweet-form__buttons\">\r\n                    <button className=\"tweet-form__submit\" onClick={handleSubmit}>Tweet</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm;\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetList","import React from 'react';\r\nimport TweetFeedList from '../../tweets/components/TweetFeedList';\r\nimport TweetForm from '../../components/tweet-form/TweetForm';\r\nimport TweetList from '../../tweets/components/TweetList';\r\nimport './styles.css';\r\n\r\nfunction Feed(props) {\r\n    const {currUser, newTweets, setNewTweets,\r\n        tweets, setTweets, tweetsDidSet, \r\n        callback, setTweetsDidSet, nextUrl, \r\n        handleLoadNextResponse} = props  \r\n    \r\n    return (\r\n        <div className=\"twitter_feed\">\r\n            <div className=\"home__header\">\r\n                <p className=\"header__content\">Home</p>\r\n            </div>\r\n            <div className=\"twitter-feed__container\">\r\n                <TweetForm\r\n                    currUser={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={callback}\r\n                />\r\n                {!currUser ?\r\n                <TweetList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> :\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />}\r\n            </div>\r\n        \r\n        </div>\r\n);\r\n}\r\n\r\nexport default Feed;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {apiGetUserTweets} from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nfunction UserTweetList(props) {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsExist, setTweetsExist] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const {user, handleLoadNextResponse, callback} = props;\r\n\r\n\r\n    const handleGetUserTweets = (response, status) => {\r\n        console.log(response)\r\n        if (status === 200) {\r\n            setTweets(response.results);\r\n            setTweetsExist(true);\r\n            setNextUrl(response.next)\r\n        } else if (status === 202) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (nextUrl !== null) {\r\n            apiGetUserTweets(handleLoadNextResponse, user.username, nextUrl);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n        if (mounted === true && user) {\r\n            apiGetUserTweets(handleGetUserTweets, user.username);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [setLoading, handleLoadNextResponse, user]);\r\n\r\n\r\n  return (!loading && tweetsExist) ? (\r\n    <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={user}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : (\r\n    null\r\n  );\r\n}\r\n\r\nexport default UserTweetList;\r\n","import React from 'react';\r\nimport {ProfileBadgeComponent} from '../profiles'\r\nimport UserTweetList from '../tweets/components/UserTweetList'\r\nimport './styles.css'\r\n\r\nfunction ProfileComponent(props) {\r\n    const {currUser, className, handleLoadNextResponse, nextUrl, callback, setCurrUser} = props;\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"profile__header\">\r\n                <p className=\"profile__content\">{currUser ? currUser.username : \"\"}</p>\r\n            </div>\r\n            <div className=\"profile__body\">\r\n                <div className=\"profile\">\r\n                    <ProfileBadgeComponent currUser={currUser} className={className} handleLoadNextResponse={handleLoadNextResponse} setCurrUser={setCurrUser}/>\r\n                </div>\r\n                <UserTweetList user={currUser} handleLoadNextResponse={handleLoadNextResponse} nextUrl={nextUrl} callback={callback}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import './Navbar.css'\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Navbar(props) {\r\n    const {currentUser} = props\r\n\r\n    const navbarContent = [\r\n        \"Home\",\r\n        \"Profile\",\r\n        \"Messages\",\r\n        \"Settings\"\r\n    ]\r\n\r\n    function NavbarListItemComponent({content, currentUser}) {\r\n        const [path, setPath] = useState('/');\r\n        const [activeSection, setActiveSection] = useState('');\r\n        const [isActive, setIsActive] = useState(false);\r\n\r\n        function listIcon() {\r\n            if (content === 'Home') {\r\n                return <i className=\"fas fa-home text-thin\"></i>\r\n            } else if (content === 'Profile') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-user-circle\"></i>\r\n                }\r\n                return <i class=\"far fa-user-circle\"></i>\r\n            } else if (content === 'Settings') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-cog bold\"></i>\r\n                }\r\n                return <i class=\"fas fa-cog\"></i>\r\n            } else if (content === 'Messages') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-envelope\"></i>\r\n                }\r\n                return <i className=\"far fa-envelope\"></i>\r\n            } \r\n        }\r\n\r\n        useEffect(() => {\r\n            if (content === 'Profile') {\r\n                setPath(`/profile/${currentUser && currentUser.username}`)\r\n            } else if (content === 'Settings') {\r\n                setPath('/settings')\r\n            } else if (content === 'Messages') {\r\n                setPath('/messages')\r\n            }\r\n        }, [content, currentUser]);\r\n\r\n        useEffect(() => {\r\n            const location = window.location.href\r\n\r\n            if (location.includes('settings')) {\r\n                setActiveSection(\"Settings\");\r\n            } else if (location.includes('messages')) {\r\n                setActiveSection('Messages');\r\n            } else if (location.includes('profile')) {\r\n                setActiveSection(\"Profile\");\r\n            } else if (location === 'http://localhost:3000/') {\r\n                setActiveSection('Home');\r\n            }   \r\n            setIsActive(content === activeSection);\r\n        }, [activeSection, content, isActive]);\r\n    \r\n        return (\r\n            <>\r\n                <Link className=\"navbar__link\" to={path}>\r\n                    <div className={`navbar__list-item ${isActive && 'bold'}`}>\r\n                        <div className='list-item__icon'>{listIcon()}</div>\r\n                        <div className=\"list-item__content\">{content && content}</div>\r\n                    </div>   \r\n                </Link>     \r\n            </>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        var hostName = 'http://localhost:3000/'\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        let path = window.location.href\r\n        if (path !== hostName) {\r\n            window.location.href = '/'\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navbar__container__outer\">\r\n            <div className=\"navbar__container__inner\">\r\n        \r\n                <ul className='navbar__list'>\r\n                    <li className=\"navbar__header\">\r\n                        <i onClick={handleClick} className=\"fab fa-twitter twitter-icon\"></i>\r\n                    </li>\r\n                    {navbarContent.map((content) => <li><NavbarListItemComponent content={content} currentUser={currentUser} /></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\nimport MessageHub from '../components/messages/MessageHub';\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport '../profiles/styles.css'\r\nimport Feed from '../components/feed/Feed'\r\nimport ProfileComponent from '../components/ProfileComponent'\r\nimport Navbar from \"../components/navbar/Navbar\"\r\n\r\n\r\nfunction Home({currUser, setCurrUser}) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currentSection, setCurrentSection] = useState('Home');\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n  \r\n\r\n \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            {console.log(currUser)}\r\n            <Navbar setCurrentSection={setCurrentSection} currentSection={currentSection} currentUser={currUser}/>\r\n            <Routes>\r\n                <Route exact path='/' element={<Feed currUser={currUser} newTweets={newTweets} setNewTweets={setNewTweets}\r\n                tweets={tweets} setTweets={setTweets} tweetsDidSet={tweetsDidSet} callback={apiTweetListCallback}\r\n                setTweetsDidSet={setTweetsDidSet} nextUrl={nextUrl} handleLoadNextResponse={handleLoadNextResponse}/>}/>\r\n                    \r\n                <Route path={`profile/${currUser ? currUser.username : \"\"}`} element={<ProfileComponent currUser={currUser} callback={apiTweetListCallback}\r\n                    setCurrUser={setCurrUser} className=\"profile-view\" handleLoadNextResponse={handleLoadNextResponse}/>}/>   \r\n                <Route exact path='messages' element={<MessageHub />}/>\r\n                <Route exact path='settings'/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState, useRef} from 'react';\r\nimport {apiLogin} from '../../api/auth';\r\n\r\nimport './styles.css'\r\n\r\n\r\nfunction Login({callback, setCurrUser}) {\r\n    const [error, setError] = useState('');\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (usernameRef.current.value.length === 0 || passwordRef.current.value.length === 0) {\r\n            setError('Both fields must be filled in')\r\n            return\r\n        }\r\n\r\n        const userData = {\r\n            \"username\": usernameRef.current.value,\r\n            \"password\": passwordRef.current.value\r\n        }\r\n        apiLogin(loginCallback, userData);\r\n    }\r\n\r\n    const loginCallback = (response, status) => {\r\n        console.log(response, status);\r\n        if (status === 200) {\r\n            setCurrUser(response);\r\n            window.location.href = '/'\r\n        } else if (status !== 500) {\r\n            setError(response['details'])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login__outer\">\r\n            <div className=\"login__inner\">\r\n                {error && <div>{error}</div>}\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form__item\">\r\n                        <label>Username</label>\r\n                        <input ref={usernameRef}/>\r\n                    </div>\r\n                    <div className=\"form__item\">\r\n                        <label>Password</label>\r\n                        <input ref={passwordRef} />\r\n                    </div>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n                <div>Don't have an account?<p onClick={callback}>Register Here</p></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import {lookup} from '../../tweet_lookup'\r\n\r\nexport function apiLogin(callback, data) {\r\n    let endpoint = '/auth/login' \r\n\r\n    lookup('POST', endpoint, callback, data)\r\n}","import React from 'react';\r\n\r\nfunction Registration() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default Registration;\r\n","import {useState} from 'react';\r\nimport {Registration, Login} from '../components/auth';\r\n\r\nfunction Auth({currUser, setCurrUser}) {\r\n  const [isLogin, setIsLogin] = useState(true); \r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setIsLogin((prevState) => !prevState);\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth__outer\">\r\n      <div className=\"auth__inner\">\r\n        {isLogin ? <Login callback={handleClick} setCurrUser={setCurrUser}/> : <Registration callback={handleClick} setCurrUser={setCurrUser}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport {Auth, Home} from './pages';\n// import Navbar from \"./tweets/components/Navbar\"\nimport {apiGetCurrentProfile} from './api/profiles'\n\n\n\nfunction App() {\n  const [currUser, setCurrUser] = useState();\n  const [didFetchUserProfile, setDidFetchUserProfile] = useState(false);\n\n  function profileFetchCallback(response, status) {\n    console.log(\"App.js>>> \", response);\n    if (status === 200) {\n      setCurrUser(response);\n    }\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchProfile = async () => {\n      if (!mounted || didFetchUserProfile) {return}\n      apiGetCurrentProfile(profileFetchCallback);\n      setDidFetchUserProfile(true);\n    }\n\n    fetchProfile()\n    return () => {\n      mounted = false;\n    }\n  }, [didFetchUserProfile]);\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route exact path='/auth' element={<Auth setCurrUser={setCurrUser} currUser={currUser} />} />\n          <Route exact path='/' element={<Home currUser={currUser} />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\nimport App from './App'\n\nimport TweetList from './tweets/components/TweetList';\nimport ProfileComponent from './components/ProfileComponent';\n\nconst e = React.createElement\nconst app = document.getElementById(\"root\")\nif (app) {\n    ReactDOM.render(e(App, app.dataset), app);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twitter-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileComponent, container.dataset), container);\n})\n\n\n\n\n\n\n"],"sourceRoot":""}