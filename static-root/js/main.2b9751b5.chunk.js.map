{"version":3,"sources":["tweet_lookup/lookup.js","tweet_lookup/get_cookie.js","tweets/components/Tweet.jsx","tweets/components/TweetList.jsx","tweets/components/TweetForm.jsx","tweets/components/Sidebar.jsx","pages/Home.jsx","App.js","index.js"],"names":["loadTweets","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","send","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Tweet","tweet","idx","useState","didLike","setDidLike","didDislike","setDidDislike","didRetweet","setDidRetweet","likes","setLikes","handleTweetAction","action","event","csrftoken","preventDefault","console","log","data","JSON","stringify","id","setRequestHeader","className","content","variant","onClick","e","color","TweetList","newTweets","setNewTweets","tweets","setTweets","myCallback","alert","useEffect","map","TweetForm","textAreaRef","useRef","onSubmit","newTweet","current","value","tempNewTweets","unshift","handleSubmit","ref","required","Sidebar","Home","App","appEl","getElementById","ReactDOM","render","tweetEl"],"mappings":"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","file":"static/js/main.2b9751b5.chunk.js","sourcesContent":["export function loadTweets(callback) {\r\n    const xhr = new XMLHttpRequest()\r\n    const method = 'GET'\r\n    const url = 'http://127.0.0.1:8000/api/tweets/'\r\n  \r\n    const responseType = \"json\"\r\n  \r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function() {\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = () => {\r\n      callback({\"message\": \"The request was an error\"}, 400)\r\n    }\r\n    xhr.send()\r\n}\r\n","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { Button } from 'bootstrap-react'\r\nimport { useState } from 'react';\r\nimport '../styles/Tweet.css'\r\nimport { getCookie } from '../../tweet_lookup';\r\n\r\n\r\n\r\nfunction Tweet({ tweet, idx, loadTweets, callback }) {\r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didDislike, setDidDislike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes)\r\n\r\n    function handleTweetAction(action, event) {\r\n        const csrftoken = getCookie('csrftoken');\r\n        event.preventDefault()\r\n    \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                return\r\n            } else {\r\n                setDidLike(true)\r\n                setLikes(likes + 1)\r\n                setDidDislike(false)\r\n            }\r\n        } else if (action === 'dislike') {\r\n            if (didDislike) {\r\n                return\r\n            } else {\r\n                setDidDislike(true)\r\n                setDidLike(false)\r\n                setLikes(likes - 1)\r\n            }\r\n        } else if (action === 'retweet') {\r\n            if (didRetweet) {\r\n                return\r\n            } else {\r\n                setDidRetweet(true)\r\n            }\r\n        }\r\n        \r\n        console.log(`${action} button pressed`)\r\n\r\n        const url = 'http://127.0.0.1:8000/api/tweets/action/'\r\n        const method = \"POST\"\r\n        const data = JSON.stringify({\r\n          id: tweet.id,\r\n          action: action,\r\n        })\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open(method, url)\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n        xhr.onload = () => {\r\n          loadTweets(callback)\r\n          console.log(data)\r\n        }\r\n        xhr.send(data)\r\n        \r\n        return\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"border bg-white overall-container\">\r\n            <div className=\"tweet-container\">\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{tweet.content}</p>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <Button variant=\"outline\" onClick={((e) => handleTweetAction(\"like\", e))}><i className=\"far fa-thumbs-up\"></i>{likes}</Button>\r\n                    <Button variant=\"outline\" onClick={((e) => handleTweetAction(\"dislike\", e))}><i className=\"far fa-thumbs-down\"></i></Button>\r\n                    <div className=\"retweet-btn\">\r\n                        <Button variant=\"outline\" color=\"success\" onClick={((e) => handleTweetAction(\"retweet\", e))}><i className=\"fas fa-retweet\"></i></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet\r\n\r\n\r\n","import { useEffect, useState } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { loadTweets } from '../../tweet_lookup/lookup'\r\nimport '../styles/TweetList.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets }) => {\r\n    const [tweets, setTweets] = useState([])\r\n\r\n    const myCallback = (response, status) => {\r\n      if (status === 200) {\r\n        setTweets(response)\r\n      } else {\r\n        alert(\"There was an error\")\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (newTweets.length > 0) {\r\n        setTweets([...newTweets, ...tweets])\r\n        setNewTweets([])\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [newTweets]);\r\n    \r\n    useEffect(() => {\r\n        loadTweets(myCallback)\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"tweet_list__container\">\r\n            {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} loadTweets={loadTweets} callback={myCallback} />})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetList","import { Button } from 'bootstrap-react'\r\nimport React, { useRef } from 'react'\r\n\r\nimport '../styles/TweetForm.css'\r\n\r\n\r\nfunction TweetForm({ newTweets, setNewTweets }) {\r\n    const textAreaRef = useRef('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newTweet = {\r\n            content: textAreaRef.current.value,\r\n            likes: 0,\r\n            id: 1000\r\n        }\r\n        textAreaRef.current.value = ''\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n            <div className=\"tweet-form-container\">\r\n                <div className=\"profile_pic\">\r\n                    IMG\r\n                </div>\r\n                <div className=\"form_container\">\r\n                    <form onSubmit={((e) => handleSubmit(e))}>\r\n                        <textarea ref={textAreaRef} required={true} className=\"form-control\">\r\n                        </textarea>\r\n                        <Button variant=\"primary\">Send Tweet</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm\r\n","function Sidebar() {\r\n    return (\r\n        <div>\r\n            Hello World\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react'\r\n\r\n\r\nimport TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport TweetForm from \"../tweets/components/TweetForm\"\r\nimport Sidebar from \"../tweets/components/Sidebar\"\r\n\r\nfunction Home() {\r\n    const [newTweets, setNewTweets] = useState([])\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <Sidebar />\r\n            <div className=\"twitter_feed\">\r\n                <TweetForm  newTweets={newTweets} setNewTweets={setNewTweets} />\r\n                <TweetList newTweets={newTweets} setNewTweets={setNewTweets} />\r\n            </div>\r\n            <Sidebar />     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Home from \"./pages/Home\"\n// import Navbar from \"./tweets/components/Navbar\"\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <Navbar /> */}\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport TweetList from './tweets/components/TweetList';\n\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst tweetEl = document.getElementById(\"worse-twitter\")\nif (tweetEl) {\n    ReactDOM.render(<TweetList />, tweetEl);\n}\n\n\n\n"],"sourceRoot":""}