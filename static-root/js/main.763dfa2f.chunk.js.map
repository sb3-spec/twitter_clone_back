{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","profiles/components.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","tweets/components/TweetForm.jsx","tweets/components/TweetFeedList.jsx","tweets/components/TweetList.jsx","pages/Home.jsx","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","status","window","location","href","indexOf","response","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiTweetAction","tweetId","action","user","id","apiGetTweetData","UserPicture","className","UserLink","onClick","event","stopPropagation","TweetOptionsBtn","tweet","currentUser","setIsDeleted","useState","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","preventDefault","apiTweetDelete","addEventListener","current","contains","target","useEffect","ref","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","currentAction","Retweet","parent","console","log","TweetDetail","props","didLookup","setDidLookup","setTweet","handleBackendLookup","alert","apiTweetDetail","TweetForm","textAreaRef","useRef","handleBackendRefresh","tempNewTweets","newTweets","unshift","setNewTweets","handleSubmit","newTweet","callBack","newTweetContent","value","onSubmit","required","variant","TweetFeedList","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","idx","TweetList","Home","setTweetsDidSet","setNextUrl","currUser","setCurrUser","apiTweetListCallback","results","next","concat","handleUserAuthCallback","React","createElement","tweetList","getElementById","ReactDOM","render","globalTweetList","tweetFeed","customComponent","dataset","tweetDetailElements"],"mappings":"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","file":"static/js/main.763dfa2f.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n       if (loginLocationIndex === -1) {\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n       }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\n\r\n","export const UserPicture = ({ user }) => {\r\n\r\n    return (\r\n        <span className=\"px-3 py-2 my-2 rounded-circle bg-dark text-white\">\r\n            {user ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport const UserLink = ({ user }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profiles/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>@{user ? user.username : 'deleted_account'}</span>\r\n    </>\r\n    )\r\n}","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { UserLink, UserPicture } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, callback, className, currentUser, nextUrl }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user} /></p>\r\n                <Tweet tweet={tweet.parent} callback={callback} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            console.log(response)\r\n            setDidRetweet(response['didRetweet'])\r\n            setDidLike(response['didLike'])\r\n            setLikes(response['likes'])\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [didLike, didRetweet, likes])\r\n\r\n\r\n\r\n    return !isDeleted && (tweet.content || tweet.parent) && (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    <UserPicture user={tweet.user} />\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserLink user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet callback={callback}/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail, apiTweetAction } from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [tweet, setTweet] = useState(null);\r\n    const [likes, setLikes] = useState(0);\r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response)\r\n            console.log(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet. Please try again.\")\r\n        }\r\n    }\r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        console.log(status, response)\r\n        if (status < 203) {\r\n            setLikes(response.likes)\r\n            if (status === 201) {\r\n                setDidRetweet((prevState) => !prevState)\r\n            } else if (status === 200 && response.is_logged_in) {\r\n                window.location.href = '/'\r\n                setDidLike(true)\r\n            } else if (status === 202) {\r\n                setDidLike(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    \r\n                    <Tweet tweet={tweet} />\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import { Button } from 'bootstrap-react'\r\nimport React, { useRef } from 'react'\r\nimport { apiTweetCreate, apiTweetList } from '../tweet_functions'\r\n\r\nimport '../styles/TweetForm.css'\r\n\r\n\r\nfunction TweetForm(props) {\r\n    const textAreaRef = useRef('')\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        // backend api request\r\n        e.preventDefault()\r\n        const newTweetContent = textAreaRef.current.value\r\n        apiTweetCreate(newTweetContent, handleBackendRefresh, props.username)\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n            <div className=\"tweet-form-container\">\r\n                <div className=\"form_container\">\r\n                    <form onSubmit={((e) => handleSubmit(e))}>\r\n                        <textarea ref={textAreaRef} required={true} className=\"form-control\">\r\n                        </textarea>\r\n                        <Button variant=\"primary\">Tweet</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetFeed(username, callback)\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetFeedList","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetList","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport TweetForm from \"../tweets/components/TweetForm\"\r\nimport TweetFeedList from \"../tweets/components/TweetFeedList\"\r\nimport TweetList from \"../tweets/components/TweetList\"\r\nimport { apiUserLookup } from \"../tweets/tweet_functions\"\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nfunction Home() {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currUser, setCurrUser] = useState();\r\n\r\n\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n    const handleUserAuthCallback = (response, status) => {\r\n        setCurrUser(response['username'])\r\n    };\r\n\r\n    useEffect(() => {\r\n        apiUserLookup(handleUserAuthCallback)\r\n    }, [])\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"twitter_feed\">\r\n                <TweetForm\r\n                    username={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                />\r\n                {!currUser ?\r\n                <TweetList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> :\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={apiTweetListCallback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\n\nimport Home from './pages/Home';\nimport TweetFeedList from './tweets/components/TweetFeedList';\nimport TweetList from './tweets/components/TweetList';\n\n\nconst e = React.createElement\nconst tweetList = document.getElementById(\"root\")\nif (tweetList) {\n    ReactDOM.render(<Home/>, tweetList);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\nconst tweetFeed = document.getElementById(\"tweet_feed\")\nif (tweetFeed) {\n    const customComponent = e(TweetFeedList, tweetFeed.dataset)\n    ReactDOM.render(customComponent, tweetFeed);\n}\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\n\n\n"],"sourceRoot":""}