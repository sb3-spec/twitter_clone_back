{"version":3,"sources":["components/messages/MessageHub.jsx","tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","profiles/components.js","api/profiles/ApiFunctions.js","media/forest_banner.jpg","components/profile-edit/ProfileEdit.jsx","profiles/badge.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetFeedList.jsx","components/tweet-form/TweetForm.jsx","tweets/components/TweetList.jsx","components/feed/Feed.jsx","tweets/components/UserTweetList.jsx","components/ProfileComponent.jsx","components/navbar/Navbar.jsx","components/tweets/TweetDetail.jsx","pages/Home.jsx","App.js","index.js"],"names":["MessageHub","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","response","status","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiTweetDetail","tweetId","tweet_id","apiGetTweetData","apiGetUserTweets","UserPicture","props","user","hideLink","isProfile","console","log","className","UserLink","children","onClick","event","stopPropagation","window","location","href","UserDisplay","includeFullName","nameDisplay","first_name","last_name","UserImages","banner","src","alt","apiGetProfileData","ProfileEdit","closeModal","usernameRef","useRef","bioRef","bio","locationRef","dataHasChanged","current","value","class","preventDefault","apiEditProfile","ref","ProfileBadgeComponent","useState","didLookup","setDidLookup","profileOwner","setProfileOwner","isLoading","setIsLoading","currUser","setCurrUser","setProfile","getProfileCallback","alert","useEffect","pathname","pop","mounted","fetchProfile","a","ProfileBadge","isEditingProfile","setIsEditingProfile","handleToggleEdit","prevState","handleFollowCallback","numeral","following_count","format","follower_count","is_following","TweetOptionsBtn","tweet","currentUser","setIsDeleted","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","apiTweetDelete","id","addEventListener","contains","target","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","didLookupTweet","setDidLookupTweet","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","action","currentAction","apiTweetAction","Retweet","parent","isMounted","fetchData","TweetFeedList","newTweets","setNewTweets","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","loading","setLoading","fetchTweetFeed","idx","TweetForm","textAreaRef","handleBackendRefresh","tempNewTweets","unshift","placeholder","required","newTweetContent","TweetList","Feed","setTweetsDidSet","UserTweetList","tweetsExist","setTweetsExist","setNextUrl","handleGetUserTweets","results","next","ProfileComponent","Navbar","activeSection","setActiveSection","NavbarListItemComponent","active","path","setPath","includes","TweetDetail","setTweet","tweetCallback","idRegex","match","groups","tweetid","fetchTweet","Home","currentSection","setCurrentSection","pageLoading","apiTweetListCallback","concat","exact","element","App","didFetchUserProfile","setDidFetchUserProfile","profileFetchCallback","app","getElementById","ReactDOM","render","globalTweetList"],"mappings":"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","file":"static/js/main.9e08f95f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction MessageHub() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default MessageHub;\r\n","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    // if (xhr.status === 403) {\r\n    //   const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n    //    if (loginLocationIndex === -1) {\r\n    //     window.location.href = \"/login?showLoginRequired=true\"\r\n    //    }\r\n    // }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {tweet_id: tweetId})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetUserTweets(callback, username, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username !== null && username !== undefined) {\r\n        endpoint += `${username}/tweets/`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, hideLink, isProfile} = props\r\n    if (isProfile) {console.log('this is the profile pic')}\r\n    return hideLink ? ( \r\n        <div className=\"profile__picture__shell\">\r\n            <UserLink user={user} hideLink={hideLink}>\r\n                <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large bg-dark text-white rounded-circle\"}>\r\n                    {user.username ? user.username[0] : 'a'}\r\n                </span>\r\n            </UserLink>\r\n        </div>\r\n    ) : (\r\n        <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large\"}> \r\n                {user.username ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport const UserLink = ({ user, children }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profile/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>\r\n            {children}\r\n        </span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name}` : `${user.username}`\r\n\r\n    return (\r\n        <div className=\"user-display__container\">\r\n            {nameDisplay}{' '}\r\n            {hideLink ? `@${user.username}` : <UserLink user={user}>{`@${user.username}`}</UserLink>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function UserImages(props) {\r\n    const {user, banner} = props\r\n    return (\r\n        <div className=\"images__container\">\r\n            <div className=\"profile__banner_picture\"><img className=\"banner-img\" src={banner} alt=\"mountain in front of sunset\"/></div>\r\n            <div className=\"profile__picture\">\r\n                <UserPicture user={user} isProfile hideLink />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiGetProfileData(callback, username, method) {\r\n    let endpoint = `/profiles/${username && username}`\r\n\r\n    lookup(method, endpoint, callback)\r\n}\r\n\r\nexport function apiToggleFollow(callback, username) {\r\n    let endpoint = `/profiles/${username && username}/follow`\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiEditProfile(callback, data) {\r\n    let endpoint = `/profiles/edit`\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetCurrentProfile(callback) {\r\n    let endpoint = `/profiles/auth`\r\n    lookup(\"GET\", endpoint, callback)\r\n}","export default __webpack_public_path__ + \"static/media/forest_banner.2143f87a.jpg\";","import React, {useRef} from 'react';\r\nimport {UserImages} from '../../profiles';\r\nimport {apiEditProfile} from '../../api/profiles';\r\n\r\nimport './styles.css';\r\nimport banner from '../../media/forest_banner.jpg';\r\n\r\nfunction ProfileEdit(props) {\r\n    const {user, closeModal, callback} = props\r\n    const usernameRef = useRef(user.username);\r\n    const bioRef = useRef(user.bio);\r\n    const locationRef = useRef(user.location);\r\n\r\n   \r\n\r\n\r\n\r\n    const saveProfile = (event) => {\r\n        event.preventDefault();\r\n        if (dataHasChanged()) {\r\n            const data = {\r\n                \"username\": usernameRef.current.value,\r\n                \"bio\": bioRef.current.value,\r\n                \"location\": locationRef.current.value\r\n            }\r\n            apiEditProfile(callback, data);\r\n\r\n        }\r\n        closeModal(event);\r\n    }\r\n\r\n    const dataHasChanged = () => {\r\n        console.log(usernameRef.current.value, user.username);\r\n        if (usernameRef.current.value !== user.username) {\r\n            return true\r\n        }\r\n        if (bioRef.current.value !== user.bio) {\r\n            return true\r\n        }\r\n        if (locationRef.current.value !== user.location) {\r\n            return true\r\n        }\r\n        // const data = [usernameRef.current, bioRef.current, locationRef.current]\r\n        // const userData = [user.username, user.bio, user.location]\r\n        // data.map((data, i) => {\r\n        //     console.log(data, i);\r\n        //     if (data !== userData[i]) {\r\n        //         return true\r\n        //     }\r\n        // });\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-container\">\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"edit-profile__container\">\r\n                <div className=\"edit__banner\">\r\n                    <div className=\"close-modal__container\">\r\n                        <span className=\"close-modal__bg\" onClick={closeModal}><i class=\"fas fa-times close-modal\"></i></span>\r\n                    </div>\r\n                    <div className=\"banner__text__container\">\r\n                        <p className=\"banner__text\">Edit Profile</p>\r\n                    </div>\r\n                    <button className=\"save-btn\" onClick={saveProfile}>Save</button>\r\n                </div>\r\n                <UserImages user={user} banner={banner}/>\r\n                <div className=\"profile-forms\">\r\n                    <form>\r\n                        <div className=\"form-container\">\r\n                            <label>Username</label>\r\n                            <textarea className=\"edit username\" ref={usernameRef}>{usernameRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label>Bio</label>\r\n                            <textarea className=\"edit bio\" ref={bioRef}>{bioRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container small-form\">\r\n                            <label>Location</label>\r\n                            <textarea className=\"edit location\" ref={locationRef}>{locationRef.current}</textarea>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {UserImages} from './components'\r\nimport {apiGetProfileData} from '../api/profiles'\r\nimport numeral from 'numeral'\r\n\r\nimport banner from '../media/forest_banner.jpg'\r\nimport './styles.css'\r\nimport ProfileEdit from '../components/profile-edit/ProfileEdit'\r\n\r\nexport const ProfileBadgeComponent = (props) => {\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [profileOwner, setProfileOwner] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { currUser, className, setCurrUser, setProfile } = props\r\n\r\n    const getProfileCallback = (response,  status) => {\r\n        if (status === 200) {\r\n            setProfileOwner(response);\r\n        } else if (status === 404) {\r\n            alert('User does not exist');\r\n            window.location.href = '/';\r\n        } else if (status === 403 || status === 401) {\r\n            window.location.href = '/login'\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        var brokenUrl = window.location.pathname.split('/');\r\n        var username = brokenUrl.pop();\r\n        let mounted = true;\r\n        const fetchProfile = async() => {\r\n            if (!mounted || didLookup) {return}\r\n            apiGetProfileData(getProfileCallback, username, 'GET');\r\n            setDidLookup(true);\r\n            setIsLoading(false);\r\n        }\r\n        if (username !== '') {\r\n            fetchProfile();\r\n        } else {\r\n            setProfileOwner(currUser);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [currUser, didLookup]);\r\n\r\n    return (!isLoading && profileOwner) ? <ProfileBadge user={profileOwner} currUser={currUser} setProfile={setProfile} className={className} setCurrUser={setCurrUser} /> : <span>User Not Found</span>;\r\n}\r\n\r\n\r\nfunction ProfileBadge(props) {\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n    const {user, setProfile, className, setCurrUser, currUser} = props\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!user) {return}\r\n        apiGetProfileData(handleFollowCallback, user.username, \"POST\");\r\n    }\r\n\r\n    const handleToggleEdit = (event) => {\r\n        event.preventDefault();\r\n        setIsEditingProfile((prevState) => !prevState);\r\n    }\r\n\r\n    const handleFollowCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 403) {\r\n            window.location.href = '/login'\r\n        } else {\r\n            alert(\"We could not find the profile in question. Please try again later.\")\r\n        }\r\n    }\r\n\r\n    const handleProfileEditCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response);\r\n        }\r\n        window.location.href = `/profile/${response.username}`\r\n    }\r\n\r\n\r\n    return user ? (\r\n        <div className={`profile-container ${className}`}>\r\n            <UserImages user={user} banner={banner}/>\r\n            \r\n            <div className=\"profile__info\">\r\n                <h3>{user.username}</h3>\r\n                <p>{`@${user.username}`}</p>\r\n\r\n                <div className='bio'>{user.bio}</div>\r\n                <div className='location'>{user.location}</div>\r\n\r\n                <div className=\"follower-following-display\">\r\n                   <div className=\"following-count\">\r\n                       <p className=\"number\">{numeral(user.following_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}Following{\" \"}</p>\r\n                   </div>\r\n                    <div className=\"follower-count\">\r\n                        <p className=\"number\">{numeral(user.follower_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}{user.follower_count === 1 ? 'Follower' : 'Followers'}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"profile__buttons\">\r\n                {user === currUser ? \r\n                <button onClick={handleToggleEdit} className=\"profile__action-button\">{'Edit Profile'}</button> \r\n                : <button onClick={handleFollowToggle} className=\"profile__action-button\">{user.is_following ? 'Unfollow' : 'Follow'}</button>}                \r\n                          \r\n            </div>\r\n            {isEditingProfile && <ProfileEdit user={currUser} closeModal={handleToggleEdit} setProfile={setProfile} callback={handleProfileEditCallback}/>}\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { UserLink, UserPicture, UserDisplay } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, className, currentUser, nextUrl }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet ? tweet.likes : 0);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                {console.log(tweet.user)}\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user}>{tweet.user.username}</UserLink></p>\r\n                <Tweet tweet={tweet.parent} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setDidRetweet(response['didRetweet']);\r\n            setDidLike(response['didLike']);\r\n            setLikes(response['likes']);\r\n            setDidLookupTweet(true);\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchData = async () => {\r\n            if (!isMounted) {return}\r\n            if (!didLookupTweet) {\r\n                apiGetTweetData(handleTweetDataCallback, tweet.id);\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [didLookupTweet, tweet]); \r\n    \r\n    let willRender = (!isDeleted && tweet && (tweet.content || tweet.parent))\r\n\r\n\r\n    return willRender ? (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    {tweet.user ? <UserLink><UserPicture user={tweet.user}/></UserLink>: \"Loading...\"}\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserDisplay user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    ) : <p>hello</p>\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import { useEffect, useState } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets]);\r\n      setNewTweets([]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const fetchTweetFeed = async () => {\r\n      if (!isMounted) {return}\r\n      if (!tweetsDidSet) {\r\n        apiTweetFeed(username, callback);\r\n      }\r\n    }\r\n    fetchTweetFeed();\r\n    setLoading(false);\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n    \r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (!loading && tweets.length > 0) ? (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : \r\n    <div className=\"tweet_feed__container\">\r\n      <p>Loading...</p>\r\n    </div>\r\n}\r\n\r\nexport default TweetFeedList;","import React, {useRef} from 'react';\r\nimport {apiTweetList, apiTweetCreate} from '../../tweets/tweet_functions';\r\nimport {UserPicture} from '../../profiles';\r\nimport './styles.css'\r\n\r\nfunction TweetForm(props) {\r\n    const {currUser} = props\r\n    console.log(currUser);\r\n    const username = currUser  && currUser.username\r\n    const textAreaRef = useRef('')\r\n\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTweetContent = textAreaRef.current.value\r\n        if (newTweetContent !== '') {\r\n            apiTweetCreate(newTweetContent, handleBackendRefresh, username);\r\n        }\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"tweet-form__container-outer\">\r\n                <div className=\"tweet-form__container-inner\">\r\n                    <div className=\"profile__container\">\r\n                        <UserPicture user={currUser ? currUser : {\"username\":\"anon\"} }/>\r\n                    </div>\r\n                    <form className=\"tweet-form\">\r\n                        <label className=\"\"></label>\r\n                        <textarea placeholder=\"What's happening?\" ref={textAreaRef} required={true} className=\"tweet-form__textarea\">\r\n                        </textarea>\r\n                    </form>\r\n                </div>\r\n                <div className=\"tweet-form__buttons\">\r\n                    <button className=\"tweet-form__submit\" onClick={handleSubmit}>Tweet</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm;\r\n","import { useEffect, useState } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  const [loading, setLoading] =  useState(true);\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n      setLoading(false);\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (!loading && tweets) ? (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) :\r\n    <div className=\"tweet_feed__container\">\r\n      <p>Loading...</p>;\r\n    </div>\r\n}\r\n\r\nexport default TweetList","import React from 'react';\r\nimport TweetFeedList from '../../tweets/components/TweetFeedList';\r\nimport TweetForm from '../../components/tweet-form/TweetForm';\r\nimport TweetList from '../../tweets/components/TweetList';\r\nimport './styles.css';\r\n\r\nfunction Feed(props) {\r\n    const {currUser, newTweets, setNewTweets,\r\n        tweets, setTweets, tweetsDidSet, \r\n        callback, setTweetsDidSet, nextUrl, \r\n        handleLoadNextResponse} = props  \r\n    \r\n    return (\r\n        <div className=\"twitter_feed\">\r\n            <div className=\"home__header\">\r\n                <p className=\"header__content\">Home</p>\r\n            </div>\r\n            <div className=\"twitter-feed__container\">\r\n                <TweetForm\r\n                    currUser={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={callback}\r\n                />\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {apiGetUserTweets} from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nfunction UserTweetList(props) {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsExist, setTweetsExist] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const {user, handleLoadNextResponse, callback} = props;\r\n\r\n\r\n    const handleGetUserTweets = (response, status) => {\r\n        console.log(response)\r\n        if (status === 200) {\r\n            setTweets(response.results);\r\n            setTweetsExist(true);\r\n            setNextUrl(response.next)\r\n        } else if (status === 202) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (nextUrl !== null) {\r\n            apiGetUserTweets(handleLoadNextResponse, user.username, nextUrl);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n        if (mounted === true && user) {\r\n            apiGetUserTweets(handleGetUserTweets, user.username);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [setLoading, handleLoadNextResponse, user]);\r\n\r\n\r\n  return (!loading && tweetsExist) ? (\r\n    <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={user}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : (\r\n    null\r\n  );\r\n}\r\n\r\nexport default UserTweetList;\r\n","import React from 'react';\r\nimport {ProfileBadgeComponent} from '../profiles'\r\nimport UserTweetList from '../tweets/components/UserTweetList'\r\nimport './styles.css'\r\n\r\nfunction ProfileComponent(props) {\r\n    const {currUser, className, handleLoadNextResponse, nextUrl, callback, setCurrUser} = props;\r\n    console.log('testign')\r\n\r\n    \r\n    return (\r\n        <div className=\"profile twitter_feed\">\r\n            <div className=\"profile__header\">\r\n                <p className=\"profile__content\">{currUser ? currUser.username : \"\"}</p>\r\n            </div>\r\n            <div className=\"profile__body\">\r\n                <div className=\"profile\">\r\n                    <ProfileBadgeComponent currUser={currUser} className={className} handleLoadNextResponse={handleLoadNextResponse} setCurrUser={setCurrUser}/>\r\n                </div>\r\n                <UserTweetList user={currUser} handleLoadNextResponse={handleLoadNextResponse} nextUrl={nextUrl} callback={callback}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import './Navbar.css'\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Navbar(props) {\r\n    const [activeSection, setActiveSection] = useState('Home');\r\n    const {currentUser} = props\r\n\r\n    const navbarContent = [\r\n        \"Home\",\r\n        \"Profile\",\r\n        \"Messages\",\r\n        \"Settings\"\r\n    ]\r\n\r\n    function NavbarListItemComponent({content, currentUser, active}) {\r\n        const [path, setPath] = useState('/');\r\n\r\n        function listIcon() {\r\n            if (content === 'Home') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-home bold\"></i>\r\n                }\r\n                return <i className=\"fas fa-home text-thin\"></i>\r\n            } else if (content === 'Profile') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-user-circle\"></i>\r\n                }\r\n                return <i class=\"far fa-user-circle\"></i>\r\n            } else if (content === 'Settings') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-cog bold\"></i>\r\n                }\r\n                return <i class=\"fas fa-cog\"></i>\r\n            } else if (content === 'Messages') {\r\n                if (active) {\r\n                    return <i className=\"fas fa-envelope\"></i>\r\n                }\r\n                return <i className=\"far fa-envelope\"></i>\r\n            } \r\n        }\r\n\r\n        const handleLinkClick = (event) => {\r\n            event.preventDefault();\r\n            setActiveSection(content);\r\n            window.location.pathname = path;\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (content === 'Profile') {\r\n                setPath(`profile`);\r\n            } else if (content === 'Settings') {\r\n                setPath('/settings')\r\n            } else if (content === 'Messages') {\r\n                setPath('/messages')\r\n            }\r\n        }, [content, currentUser]);\r\n\r\n    \r\n        return (\r\n            <>\r\n                <div onClick={handleLinkClick} className={`navbar__list-item ${active && 'bold'}`}>\r\n                    <div className='list-item__icon'>{listIcon()}</div>\r\n                    <div className=\"list-item__content\">{content && content}</div>\r\n                </div>   \r\n    \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    // NAVBAR BELOW\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        var hostName = 'http://localhost:3000/'\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        let path = window.location.href\r\n        if (path !== hostName) {\r\n            window.location.pathname = '/'\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        let path = window.location.href\r\n\r\n        if (path.includes('settings')) {\r\n            setActiveSection('Settings')\r\n        } else if (path.includes('messages')) {\r\n            setActiveSection('Messages')\r\n        } else if (path.includes('profile')) {\r\n            setActiveSection('Profile')\r\n        } else {\r\n            setActiveSection('Home')\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"navbar__container__outer\">\r\n            <div className=\"navbar__container__inner\">\r\n        \r\n                <ul className='navbar__list'>\r\n                    <li className=\"navbar__header\">\r\n                        <i onClick={handleClick} className=\"fab fa-twitter twitter-icon\"></i>\r\n                    </li>\r\n                    {navbarContent.map((content, idx) => <li><NavbarListItemComponent key={idx} content={content} currentUser={currentUser} active={content === activeSection}/></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n","import {useEffect, useState} from 'react';\r\nimport { apiTweetDetail } from '../../tweets/tweet_functions';\r\nimport Tweet from '../../tweets/components/Tweet'\r\n\r\nfunction TweetDetail({currUser}) {\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n    const [tweet, setTweet] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const tweetCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var path = window.location.pathname\r\n        var idRegex = /(?<tweetid>\\d+)/\r\n        var match = path.match(idRegex)\r\n        let tweetId;\r\n        if (match) {\r\n            tweetId = match.groups.tweetid\r\n        }\r\n        \r\n        let mounted = true;\r\n        const fetchTweet = async () => {\r\n            if (!mounted || didLookupTweet) {return}\r\n            apiTweetDetail(tweetId, tweetCallback)\r\n            setDidLookupTweet(true);\r\n        }\r\n        fetchTweet();   \r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [tweet, didLookupTweet]);\r\n\r\n\r\n    return loading ? (\r\n        <div>\r\n            <Tweet tweet={tweet} currentUser={currUser}/>\r\n        </div>\r\n    ) : <p>Loading...</p>;\r\n  \r\n  \r\n}\r\n\r\nexport default TweetDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {Routes, Route} from 'react-router-dom';\r\nimport MessageHub from '../components/messages/MessageHub';\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport '../profiles/styles.css'\r\nimport Feed from '../components/feed/Feed'\r\nimport ProfileComponent from '../components/ProfileComponent'\r\nimport Navbar from \"../components/navbar/Navbar\"\r\nimport {TweetDetail} from '../components/tweets'\r\n\r\nfunction Home({currUser, setCurrUser}) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currentSection, setCurrentSection] = useState('Home');\r\n    const [pageLoading, setPageLoading] = useState(true);\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n    return (     \r\n        <div className=\"home-container\">\r\n          <Navbar setCurrentSection={setCurrentSection} currentSection={currentSection} currentUser={currUser} pageLoading={pageLoading}/>\r\n          <Routes>\r\n              <Route exact path='/' element={<Feed currUser={currUser} newTweets={newTweets} setNewTweets={setNewTweets}\r\n              tweets={tweets} setTweets={setTweets} tweetsDidSet={tweetsDidSet} callback={apiTweetListCallback}\r\n              setTweetsDidSet={setTweetsDidSet} nextUrl={nextUrl} handleLoadNextResponse={handleLoadNextResponse} pageLoading={pageLoading}/>}/>\r\n                  \r\n              <Route path='profile' element={<ProfileComponent currUser={currUser} user={currUser} callback={apiTweetListCallback}\r\n                  setCurrUser={setCurrUser} className=\"profile-view\" handleLoadNextResponse={handleLoadNextResponse} />}/>   \r\n              <Route path=':tweetId' element={<TweetDetail currUser={currUser}/>} />\r\n              <Route exact path='messages' element={<MessageHub />}/>\r\n              <Route exact path='settings'/>\r\n          </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport {Auth, Home} from './pages';\n// import Navbar from \"./tweets/components/Navbar\"\nimport {apiGetCurrentProfile} from './api/profiles'\n\n\n\nfunction App() {\n  const [currUser, setCurrUser] = useState();\n  const [didFetchUserProfile, setDidFetchUserProfile] = useState(false);\n\n  function profileFetchCallback(response, status) {\n    console.log(\"App.js>>> \", response);\n    if (status === 200) {\n      setCurrUser(response);\n    }\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchProfile = async () => {\n      if (!mounted || didFetchUserProfile) {return}\n      apiGetCurrentProfile(profileFetchCallback);\n      setDidFetchUserProfile(true);\n    }\n\n    fetchProfile()\n    return () => {\n      mounted = false;\n    }\n  }, [didFetchUserProfile]);\n\n\n  \n\n  return (\n    <div className=\"App clearfix\">\n      <Router>\n        <Home currUser={currUser} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nimport TweetList from './tweets/components/TweetList';\n\nconst app = document.getElementById(\"root\")\nif (app) {\n    ReactDOM.render(<App />, app);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\n\n\n\n\n\n\n"],"sourceRoot":""}