{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","api/profiles/ApiFunctions.js","profiles/components.js","media/forest_banner.jpg","components/profile-edit/ProfileEdit.jsx","profiles/badge.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","components/messages/MessageHub.jsx","tweets/components/TweetFeedList.jsx","components/tweet-form/TweetForm.jsx","tweets/components/TweetList.jsx","components/feed/Feed.jsx","tweets/components/UserTweetList.jsx","components/ProfileComponent.jsx","components/navbar/Navbar.jsx","pages/Home.jsx","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","status","window","location","href","indexOf","response","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiGetTweetData","tweetId","apiGetUserTweets","apiGetProfileData","UserPicture","props","user","hideLink","isProfile","console","log","className","UserLink","children","onClick","event","stopPropagation","UserDisplay","includeFullName","nameDisplay","first_name","last_name","UserImages","banner","src","alt","ProfileEdit","closeModal","usernameRef","useRef","bioRef","bio","locationRef","dataHasChanged","current","value","class","preventDefault","apiEditProfile","ref","ProfileBadgeComponent","currUser","setCurrUser","setProfile","ProfileBadge","useState","isEditingProfile","setIsEditingProfile","handleToggleEdit","prevState","numeral","following_count","format","follower_count","TweetOptionsBtn","tweet","currentUser","setIsDeleted","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","apiTweetDelete","id","addEventListener","contains","target","useEffect","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","didLookupProfile","setDidLookupProfile","didLookupTweet","setDidLookupTweet","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","action","currentAction","apiTweetAction","Retweet","parent","handleProfileCallback","isMounted","fetchData","a","TweetDetail","didLookup","setDidLookup","setTweet","handleTweetLookup","handleCurrUserLookup","tweet_id","apiTweetDetail","MessageHub","TweetFeedList","newTweets","setNewTweets","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","fetchTweetFeed","idx","TweetForm","textAreaRef","handleBackendRefresh","tempNewTweets","unshift","alert","placeholder","required","newTweetContent","TweetList","Feed","setTweetsDidSet","UserTweetList","tweetsExist","setTweetsExist","loading","setLoading","setNextUrl","handleGetUserTweets","results","next","mounted","ProfileComponent","Navbar","NavbarListItemComponent","path","setPath","activeSection","setActiveSection","isActive","setIsActive","includes","to","Home","currentSection","setCurrentSection","didLookupCurrentUser","setDidLookupCurrentUser","apiTweetListCallback","concat","handleGetCurrentProfile","fetchCurrentUserProfile","exact","element","React","createElement","tweetList","getElementById","ReactDOM","render","dataset","globalTweetList","tweetFeed","customComponent","tweetDetailElements","querySelectorAll","forEach","container","navbarComponent"],"mappings":"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","file":"static/js/main.918c7a60.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n       if (loginLocationIndex === -1) {\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n       }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {tweet_id: tweetId})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetUserTweets(callback, username, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username !== null && username !== undefined) {\r\n        endpoint += `${username}/tweets/`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiGetProfileData(callback, username, method) {\r\n    let endpoint = `/profiles/${username && username}`\r\n\r\n    lookup(method, endpoint, callback)\r\n}\r\n\r\nexport function apiToggleFollow(callback, username) {\r\n    let endpoint = `/profiles/${username && username}/follow`\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiEditProfile(callback, data) {\r\n    let endpoint = `/profiles/edit`\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetCurrentProfile(callback) {\r\n    let endpoint = `/profiles/auth`\r\n    lookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, hideLink, isProfile} = props\r\n    if (isProfile) {console.log('this is the profile pic')}\r\n    return hideLink ? ( \r\n        <div className=\"profile__picture__shell\">\r\n            <UserLink user={user} hideLink={hideLink}>\r\n                <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large bg-dark text-white rounded-circle\"}>\r\n                    {user.username ? user.username[0] : 'a'}\r\n                </span>\r\n            </UserLink>\r\n        </div>\r\n    ) : (\r\n        <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large\"}> \r\n                {user.username ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport const UserLink = ({ user, children }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profile/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>\r\n            {children}\r\n        </span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name}` : `${user.username}`\r\n\r\n    return (\r\n        <>\r\n            {nameDisplay}{' '}\r\n            {hideLink ? `@${user.username}` : <UserLink user={user}>{`@${user.username}`}</UserLink>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport function UserImages(props) {\r\n    const {user, banner} = props\r\n    return (\r\n        <div className=\"images__container\">\r\n            <div className=\"profile__banner_picture\"><img className=\"banner-img\" src={banner} alt=\"mountain in front of sunset\"/></div>\r\n            <div className=\"profile__picture\">\r\n                <UserPicture user={user} isProfile hideLink />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/forest_banner.2143f87a.jpg\";","import React, {useRef} from 'react';\r\nimport {UserImages} from '../../profiles';\r\nimport {apiEditProfile} from '../../api/profiles';\r\n\r\nimport './styles.css';\r\nimport banner from '../../media/forest_banner.jpg';\r\n\r\nfunction ProfileEdit(props) {\r\n    const {user, closeModal, callback} = props\r\n    const usernameRef = useRef(user.username);\r\n    const bioRef = useRef(user.bio);\r\n    const locationRef = useRef(user.location);\r\n\r\n   \r\n\r\n\r\n\r\n    const saveProfile = (event) => {\r\n        event.preventDefault();\r\n        if (dataHasChanged()) {\r\n            const data = {\r\n                \"username\": usernameRef.current.value,\r\n                \"bio\": bioRef.current.value,\r\n                \"location\": locationRef.current.value\r\n            }\r\n            apiEditProfile(callback, data);\r\n\r\n        }\r\n        closeModal(event);\r\n    }\r\n\r\n    const dataHasChanged = () => {\r\n        console.log(usernameRef.current.value, user.username);\r\n        if (usernameRef.current.value !== user.username) {\r\n            return true\r\n        }\r\n        if (bioRef.current.value !== user.bio) {\r\n            return true\r\n        }\r\n        if (locationRef.current.value !== user.location) {\r\n            return true\r\n        }\r\n        // const data = [usernameRef.current, bioRef.current, locationRef.current]\r\n        // const userData = [user.username, user.bio, user.location]\r\n        // data.map((data, i) => {\r\n        //     console.log(data, i);\r\n        //     if (data !== userData[i]) {\r\n        //         return true\r\n        //     }\r\n        // });\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-container\">\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"edit-profile__container\">\r\n                <div className=\"edit__banner\">\r\n                    <div className=\"close-modal__container\">\r\n                        <span className=\"close-modal__bg\" onClick={closeModal}><i class=\"fas fa-times close-modal\"></i></span>\r\n                    </div>\r\n                    <div className=\"banner__text__container\">\r\n                        <p className=\"banner__text\">Edit Profile</p>\r\n                    </div>\r\n                    <button className=\"save-btn\" onClick={saveProfile}>Save</button>\r\n                </div>\r\n                <UserImages user={user} banner={banner}/>\r\n                <div className=\"profile-forms\">\r\n                    <form>\r\n                        <div className=\"form-container\">\r\n                            <label>Username</label>\r\n                            <textarea className=\"edit username\" ref={usernameRef}>{usernameRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label>Bio</label>\r\n                            <textarea className=\"edit bio\" ref={bioRef}>{bioRef.current}</textarea>\r\n                        </div>\r\n                        <div className=\"form-container small-form\">\r\n                            <label>Location</label>\r\n                            <textarea className=\"edit location\" ref={locationRef}>{locationRef.current}</textarea>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {UserPicture, UserImages} from './components'\r\nimport {apiGetProfileData} from '../api/profiles'\r\nimport numeral from 'numeral'\r\n\r\nimport banner from '../media/forest_banner.jpg'\r\nimport './styles.css'\r\nimport ProfileEdit from '../components/profile-edit/ProfileEdit'\r\n\r\nexport const ProfileBadgeComponent = (props) => {\r\n    const { currUser, className, setCurrUser, setProfile } = props\r\n\r\n    console.log(currUser)\r\n    return currUser ? <ProfileBadge user={currUser} setProfile={setProfile} className={className} setCurrUser={setCurrUser} /> : <span>User Not Found</span>;\r\n}\r\n\r\nfunction ProfileBadge(props) {\r\n    const [isEditingProfile, setIsEditingProfile] = useState(false);\r\n    const {user, setProfile, className, setCurrUser} = props\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!user) {return}\r\n        apiGetProfileData(handleFollowCallback, user.username, \"POST\");\r\n    }\r\n\r\n    const handleToggleEdit = (event) => {\r\n        event.preventDefault();\r\n        setIsEditingProfile((prevState) => !prevState);\r\n    }\r\n\r\n    const handleFollowCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 403) {\r\n            window.location.href = '/login'\r\n        } else {\r\n            alert(\"We could not find the profile in question. Please try again later.\")\r\n        }\r\n    }\r\n\r\n    const handleProfileEditCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response);\r\n        }\r\n        window.location.href = `/profile/${response.username}`\r\n    }\r\n\r\n\r\n    return user ? (\r\n        <div className={`profile-container ${className}`}>\r\n            <UserImages user={user} banner={banner}/>\r\n            \r\n            <div className=\"profile__info\">\r\n                <h3>{user.username}</h3>\r\n                <p>{`@${user.username}`}</p>\r\n\r\n                <div className='bio'>{user.bio}</div>\r\n                <div className='location'>{user.location}</div>\r\n\r\n                <div className=\"follower-following-display\">\r\n                   <div className=\"following-count\">\r\n                       <p className=\"number\">{numeral(user.following_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}Following{\" \"}</p>\r\n                   </div>\r\n                    <div className=\"follower-count\">\r\n                        <p className=\"number\">{numeral(user.follower_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}{user.follower_count === 1 ? 'Follower' : 'Followers'}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"profile__buttons\">\r\n                {true ? \r\n                <button onClick={handleToggleEdit} className=\"profile__action-button\">{'Edit Profile'}</button> \r\n                : <button onClick={handleFollowToggle} className=\"profile__action-button\">{user.is_following ? 'Unfollow' : 'Follow'}</button>}                \r\n                          \r\n            </div>\r\n            {isEditingProfile && <ProfileEdit user={user} closeModal={handleToggleEdit} setProfile={setProfile} callback={handleProfileEditCallback}/>}\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { apiGetProfileData } from '../../api/profiles'\r\nimport { UserLink, UserPicture, UserDisplay } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, className, currentUser, nextUrl }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n    const [didLookupProfile, setDidLookupProfile] = useState(false);\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                {console.log(tweet.user)}\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user}>{tweet.user.username}</UserLink></p>\r\n                <Tweet tweet={tweet.parent} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setDidRetweet(response['didRetweet']);\r\n            setDidLike(response['didLike']);\r\n            setLikes(response['likes']);\r\n            setDidLookupTweet(true);\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    const handleProfileCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response);\r\n            setDidLookupProfile(true)\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchData = async () => {\r\n            if (!isMounted) {return}\r\n            if (!didLookupTweet) {\r\n                apiGetTweetData(handleTweetDataCallback, tweet.id);\r\n            }\r\n            if (!didLookupProfile) {\r\n                apiGetProfileData(handleProfileCallback, tweet.user.username, \"GET\");\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [didLookupProfile, didLookupTweet, tweet]);  \r\n\r\n\r\n\r\n    return !isDeleted && (tweet.content || tweet.parent) && (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    {tweet.user ? <UserLink><UserPicture user={tweet.user}/></UserLink>: \"Loading...\"}\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserDisplay user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail } from '../tweet_functions'\r\nimport {apiUserLookup} from '../tweet_functions' \r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [currUser, setCurrUser] = useState();\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n    const handleTweetLookup = (response, status) => {\r\n\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    const handleCurrUserLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response.username);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleTweetLookup);\r\n            apiUserLookup(handleCurrUserLookup);\r\n            setDidLookup(true);  \r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    <Tweet tweet={tweet} currentUser={currUser}/>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import React from 'react';\r\n\r\nfunction MessageHub() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default MessageHub;\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets]);\r\n      setNewTweets([]);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const fetchTweetFeed = async () => {\r\n      if (!isMounted) {return}\r\n      if (!tweetsDidSet) {\r\n        apiTweetFeed(username, callback);\r\n      }\r\n    }\r\n    fetchTweetFeed();\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n    \r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetFeedList;","import React, {useRef} from 'react';\r\nimport {apiTweetList, apiTweetCreate} from '../../tweets/tweet_functions';\r\nimport {UserPicture} from '../../profiles';\r\nimport './styles.css'\r\n\r\nfunction TweetForm(props) {\r\n    const {currUser} = props\r\n    console.log(currUser);\r\n    const username = currUser  && currUser.username\r\n    const textAreaRef = useRef('')\r\n\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTweetContent = textAreaRef.current.value\r\n        if (newTweetContent !== '') {\r\n            apiTweetCreate(newTweetContent, handleBackendRefresh, username);\r\n        }\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"tweet-form__container-outer\">\r\n                <div className=\"tweet-form__container-inner\">\r\n                    <div className=\"profile__container\">\r\n                        <UserPicture user={currUser ? currUser : {\"username\":\"anon\"} }/>\r\n                    </div>\r\n                    <form className=\"tweet-form\">\r\n                        <label className=\"\"></label>\r\n                        <textarea placeholder=\"What's happening?\" ref={textAreaRef} required={true} className=\"tweet-form__textarea\">\r\n                        </textarea>\r\n                    </form>\r\n                </div>\r\n                <div className=\"tweet-form__buttons\">\r\n                    <button className=\"tweet-form__submit\" onClick={handleSubmit}>Tweet</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm;\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetList","import React from 'react';\r\nimport TweetFeedList from '../../tweets/components/TweetFeedList';\r\nimport TweetForm from '../../components/tweet-form/TweetForm';\r\nimport TweetList from '../../tweets/components/TweetList';\r\nimport './styles.css';\r\n\r\nfunction Feed(props) {\r\n    const {currUser, newTweets, setNewTweets,\r\n        tweets, setTweets, tweetsDidSet, \r\n        callback, setTweetsDidSet, nextUrl, \r\n        handleLoadNextResponse} = props  \r\n    \r\n    return (\r\n        <div className=\"twitter_feed\">\r\n            <div className=\"home__header\">\r\n                <p className=\"header__content\">Home</p>\r\n            </div>\r\n            <div className=\"twitter-feed__container\">\r\n                <TweetForm\r\n                    currUser={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={callback}\r\n                />\r\n                {!currUser ?\r\n                <TweetList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> :\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />}\r\n            </div>\r\n        \r\n        </div>\r\n);\r\n}\r\n\r\nexport default Feed;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {apiGetUserTweets} from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nfunction UserTweetList(props) {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsExist, setTweetsExist] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const {user, handleLoadNextResponse, callback} = props;\r\n\r\n\r\n    const handleGetUserTweets = (response, status) => {\r\n        console.log(response)\r\n        if (status === 200) {\r\n            setTweets(response.results);\r\n            setTweetsExist(true);\r\n            setNextUrl(response.next)\r\n        } else if (status === 202) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (nextUrl !== null) {\r\n            apiGetUserTweets(handleLoadNextResponse, user.username, nextUrl);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n        if (mounted === true && user) {\r\n            apiGetUserTweets(handleGetUserTweets, user.username);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [setLoading, handleLoadNextResponse, user]);\r\n\r\n\r\n  return (!loading && tweetsExist) ? (\r\n    <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={user}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : (\r\n    null\r\n  );\r\n}\r\n\r\nexport default UserTweetList;\r\n","import React from 'react';\r\nimport {ProfileBadgeComponent} from '../profiles'\r\nimport UserTweetList from '../tweets/components/UserTweetList'\r\nimport './styles.css'\r\n\r\nfunction ProfileComponent(props) {\r\n    const {currUser, className, handleLoadNextResponse, nextUrl, callback, setCurrUser} = props;\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"profile__header\">\r\n                <p className=\"profile__content\">{currUser ? currUser.username : \"\"}</p>\r\n            </div>\r\n            <div className=\"profile__body\">\r\n                <div className=\"profile\">\r\n                    <ProfileBadgeComponent currUser={currUser} className={className} handleLoadNextResponse={handleLoadNextResponse} setCurrUser={setCurrUser}/>\r\n                </div>\r\n                <UserTweetList user={currUser} handleLoadNextResponse={handleLoadNextResponse} nextUrl={nextUrl} callback={callback}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import './Navbar.css'\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Navbar(props) {\r\n    const {currentUser} = props\r\n\r\n    const navbarContent = [\r\n        \"Home\",\r\n        \"Profile\",\r\n        \"Messages\",\r\n        \"Settings\"\r\n    ]\r\n\r\n    function NavbarListItemComponent({content, currentUser}) {\r\n        const [path, setPath] = useState('/');\r\n        const [activeSection, setActiveSection] = useState('');\r\n        const [isActive, setIsActive] = useState(false);\r\n\r\n        function listIcon() {\r\n            if (content === 'Home') {\r\n                return <i className=\"fas fa-home text-thin\"></i>\r\n            } else if (content === 'Profile') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-user-circle\"></i>\r\n                }\r\n                return <i class=\"far fa-user-circle\"></i>\r\n            } else if (content === 'Settings') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-cog bold\"></i>\r\n                }\r\n                return <i class=\"fas fa-cog\"></i>\r\n            } else if (content === 'Messages') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-envelope\"></i>\r\n                }\r\n                return <i className=\"far fa-envelope\"></i>\r\n            } \r\n        }\r\n\r\n        useEffect(() => {\r\n            if (content === 'Profile') {\r\n                setPath(`/profile/${currentUser.username}`)\r\n            } else if (content === 'Settings') {\r\n                setPath('/settings')\r\n            } else if (content === 'Messages') {\r\n                setPath('/messages')\r\n            }\r\n        }, [content, currentUser]);\r\n\r\n        useEffect(() => {\r\n            const location = window.location.href\r\n\r\n            if (location.includes('settings')) {\r\n                setActiveSection(\"Settings\");\r\n            } else if (location.includes('messages')) {\r\n                setActiveSection('Messages');\r\n            } else if (location.includes('profile')) {\r\n                setActiveSection(\"Profile\");\r\n            } else if (location === 'http://localhost:3000/') {\r\n                setActiveSection('Home');\r\n            }   \r\n            setIsActive(content === activeSection);\r\n        }, [activeSection, content, isActive]);\r\n    \r\n        return (\r\n            <>\r\n                <Link className=\"navbar__link\" to={path}>\r\n                    <div className={`navbar__list-item ${isActive && 'bold'}`}>\r\n                        <div className='list-item__icon'>{listIcon()}</div>\r\n                        <div className=\"list-item__content\">{content && content}</div>\r\n                    </div>   \r\n                </Link>     \r\n            </>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        var hostName = 'http://localhost:3000/'\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        let path = window.location.href\r\n        if (path !== hostName) {\r\n            window.location.href = '/'\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navbar__container__outer\">\r\n            <div className=\"navbar__container__inner\">\r\n        \r\n                <ul className='navbar__list'>\r\n                    <li className=\"navbar__header\">\r\n                        <i onClick={handleClick} className=\"fab fa-twitter twitter-icon\"></i>\r\n                    </li>\r\n                    {navbarContent.map((content) => <li><NavbarListItemComponent content={content} currentUser={currentUser} /></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\nimport MessageHub from '../components/messages/MessageHub';\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport '../profiles/styles.css'\r\nimport Feed from '../components/feed/Feed'\r\nimport ProfileComponent from '../components/ProfileComponent'\r\nimport {apiGetCurrentProfile} from '../api/profiles'\r\nimport Navbar from \"../components/navbar/Navbar\"\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nfunction Home() {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currUser, setCurrUser] = useState({'username': 'meatbal'});\r\n    const [currentSection, setCurrentSection] = useState('Home');\r\n    const [didLookupCurrentUser, setDidLookupCurrentUser] = useState(false);\r\n\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n    const handleGetCurrentProfile = (response, status) => {\r\n        console.log(response);\r\n        if (status === 200) {\r\n            setCurrUser(response);\r\n        } else {\r\n            window.location.href = '/register'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        const fetchCurrentUserProfile = async () => {\r\n            if (!mounted) {return} // if not mounted, return\r\n            apiGetCurrentProfile(handleGetCurrentProfile);\r\n        }\r\n        if (!didLookupCurrentUser) { // if u havent looked up current user, look them up\r\n            fetchCurrentUserProfile();\r\n            setDidLookupCurrentUser(true);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [didLookupCurrentUser]);\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"home-container\">\r\n                <Navbar setCurrentSection={setCurrentSection} currentSection={currentSection} currentUser={currUser}/>\r\n                <Routes>\r\n                    <Route exact path='/' element={<Feed currUser={currUser} newTweets={newTweets} setNewTweets={setNewTweets}\r\n                                tweets={tweets} setTweets={setTweets} tweetsDidSet={tweetsDidSet} callback={apiTweetListCallback}\r\n                                setTweetsDidSet={setTweetsDidSet} nextUrl={nextUrl} handleLoadNextResponse={handleLoadNextResponse}/>}>\r\n                        \r\n                    </Route>\r\n                    <Route path={`profile/${currUser ? currUser.username : \"\"}`} element={<ProfileComponent currUser={currUser} callback={apiTweetListCallback}\r\n                     setCurrUser={setCurrUser} className=\"profile-view\" handleLoadNextResponse={handleLoadNextResponse}/>}>   \r\n                    </Route>\r\n                    <Route exact path='messages' element={<MessageHub />}></Route>\r\n                    <Route exact path='settings'></Route>\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\n\nimport Home from './pages/Home';\nimport TweetFeedList from './tweets/components/TweetFeedList';\nimport TweetList from './tweets/components/TweetList';\nimport ProfileComponent from './components/ProfileComponent';\nimport Navbar from './components/navbar/Navbar';\n\nconst e = React.createElement\nconst tweetList = document.getElementById(\"root\")\nif (tweetList) {\n    ReactDOM.render(e(Home, tweetList.dataset), tweetList);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\nconst tweetFeed = document.getElementById(\"tweet_feed\")\nif (tweetFeed) {\n    const customComponent = e(TweetFeedList, tweetFeed.dataset)\n    ReactDOM.render(customComponent, tweetFeed);\n}\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twitter-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileComponent, container.dataset), container);\n})\n\nconst navbarComponent = document.getElementById(\"navbar\");\n\nif (navbarComponent) {\n    const customComponent = e(Navbar, navbarComponent.dataset);\n    ReactDOM.render(customComponent, navbarComponent);\n}\n\n\n\n\n"],"sourceRoot":""}