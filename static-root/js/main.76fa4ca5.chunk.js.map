{"version":3,"sources":["tweet_lookup/get_cookie.js","tweet_lookup/lookup.js","tweets/tweet_functions/functions.js","api/profiles/ApiFunctions.js","profiles/components.js","media/forest_banner.jpg","profiles/badge.js","tweets/components/TweetOptionsBtn.jsx","tweets/components/Tweet.jsx","tweets/components/TweetDetail.jsx","components/messages/MessageHub.jsx","tweets/components/TweetFeedList.jsx","components/tweet-form/TweetForm.jsx","tweets/components/TweetList.jsx","components/feed/Feed.jsx","tweets/components/UserTweetList.jsx","components/ProfileComponent.jsx","components/navbar/Navbar.jsx","pages/Home.jsx","index.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","responseType","open","setRequestHeader","onload","status","window","location","href","indexOf","response","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","apiUserLookup","apiGetTweetData","tweetId","apiGetUserTweets","apiGetProfileData","UserPicture","props","user","hideLink","isProfile","console","log","className","UserLink","children","onClick","event","stopPropagation","UserDisplay","includeFullName","nameDisplay","first_name","last_name","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","handleBackendLookup","alert","useEffect","fetchProfile","a","ProfileBadge","handleFollowCallback","src","banner","alt","bio","numeral","following_count","format","follower_count","preventDefault","TweetOptionsBtn","tweet","currentUser","setIsDeleted","clicked","setClicked","options","setOptions","modalWindow","createRef","TweetOption","content","handleTweetDelete","apiTweetDelete","id","addEventListener","current","contains","target","ref","map","option","e","Tweet","didLike","setDidLike","didRetweet","setDidRetweet","likes","setLikes","isDeleted","didLookupProfile","setDidLookupProfile","didLookupTweet","setDidLookupTweet","handleLink","handleBackendActionEvent","handleTweetDataCallback","handleTweetAction","action","currentAction","apiTweetAction","Retweet","parent","handleProfileCallback","isMounted","fetchData","TweetDetail","currUser","setCurrUser","setTweet","handleTweetLookup","handleCurrUserLookup","tweet_id","apiTweetDetail","MessageHub","TweetFeedList","newTweets","setNewTweets","tweets","setTweets","tweetsDidSet","handleLoadNextResponse","fetchTweetFeed","idx","TweetForm","textAreaRef","useRef","handleBackendRefresh","tempNewTweets","unshift","handleFetchCallback","mounted","placeholder","required","newTweet","callBack","newTweetContent","value","TweetList","Feed","setTweetsDidSet","UserTweetList","tweetsExist","setTweetsExist","loading","setLoading","setNextUrl","handleGetUserTweets","results","next","ProfileComponent","Navbar","NavbarListItemComponent","path","setPath","activeSection","setActiveSection","isActive","setIsActive","includes","to","class","Home","currentSection","setCurrentSection","apiTweetListCallback","concat","handleUserAuthCallback","exact","element","React","createElement","tweetList","getElementById","ReactDOM","render","dataset","globalTweetList","tweetFeed","customComponent","tweetDetailElements","querySelectorAll","forEach","container","navbarComponent"],"mappings":"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","file":"static/js/main.76fa4ca5.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie","import { getCookie } from \".\";\r\n\r\nexport function lookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  const csrftoken = getCookie('csrftoken')\r\n  xhr.responseType = \"json\"\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader('Content-Type', 'application/json')\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-Requested-With\", 'XMLHttpRequest')\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)  \r\n  } \r\n\r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const loginLocationIndex = window.location.href.indexOf(\"login\")\r\n       if (loginLocationIndex === -1) {\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n       }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = () => {\r\n    \r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }  \r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callBack, user) {\r\n    lookup(\"POST\", \"/tweets/create/\", callBack, {content: newTweet, username: user})\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username) {\r\n        endpoint += `?username=${username}`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetFeed(username, callback, nextUrl) {\r\n    let endpoint = `/tweets/feed/`\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {\"username\": username})  \r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n    lookup(\"GET\", endpoint, callback, {tweet_id: tweetId})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback, user) {\r\n    lookup(\"POST\", \"/tweets/action/\", callback, {id: tweetId, action: action, username: user})\r\n}\r\n\r\nexport function apiUserLookup(callback) {\r\n    let endpoint = '/users/auth/'\r\n\r\n   \r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiCheckCurrentUserHasLiked(callback, tweetId) {\r\n    let endpoint = '/tweets/like_check/'\r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiGetTweetData(callback, tweetId) {\r\n    let endpoint = '/tweets/data/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}`\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetDelete(callback, tweetId, username) {\r\n    let endpoint = '/tweets/'\r\n    \r\n    if (tweetId) {\r\n        endpoint += `${tweetId}/delete/`\r\n    }\r\n\r\n    let data = {\r\n        \"username\": username,\r\n    }\r\n\r\n    lookup(\"POST\", endpoint, callback, data)\r\n}\r\n\r\nexport function apiGetUserTweets(callback, username, nextUrl) {\r\n    let endpoint = '/tweets/'\r\n\r\n    if (username !== null && username !== undefined) {\r\n        endpoint += `${username}/tweets/`\r\n    }\r\n\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n","import { lookup } from '../../tweet_lookup/lookup'\r\n\r\nexport function apiGetProfileData(callback, username, method) {\r\n    let endpoint = `/profiles/${username && username}`\r\n\r\n    lookup(method, endpoint, callback)\r\n}\r\n\r\nexport function apiToggleFollow(callback, username) {\r\n    let endpoint = `/profiles/${username && username}/follow`\r\n\r\n    lookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, hideLink, isProfile} = props\r\n    if (isProfile) {console.log('this is the profile pic')}\r\n    return hideLink ? ( \r\n        <div className=\"profile__picture__shell\">\r\n            <UserLink user={user} hideLink={hideLink}>\r\n                <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large bg-dark text-white rounded-circle\"}>\r\n                    {user.username ? user.username[0] : 'a'}\r\n                </span>\r\n            </UserLink>\r\n        </div>\r\n    ) : (\r\n        <span className={!isProfile ? \"px-3 py-2 my-2 rounded-circle bg-dark text-white\" : \"profile__large\"}> \r\n                {user.username ? user.username[0] : 'a'}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport const UserLink = ({ user, children }) => {\r\n\r\n    const handleUserLink = (event) => {\r\n        event.stopPropagation()\r\n        window.location.href = `/profiles/${user && user.username}`\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <span className=\"pointer\" onClick={handleUserLink}>\r\n            {children}\r\n        </span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName ? `${user.first_name} ${user.last_name}` : `${user.username}`\r\n\r\n    return (\r\n        <>\r\n            {nameDisplay}{' '}\r\n            {hideLink ? `@${user.username}` : <UserLink user={user}>{`@${user.username}`}</UserLink>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/forest_banner.2143f87a.jpg\";","import React, {useState, useEffect} from 'react'\r\nimport {UserPicture, UserDisplay} from './components'\r\nimport {apiGetProfileData} from '../api/profiles'\r\nimport numeral from 'numeral'\r\n\r\nimport banner from '../media/forest_banner.jpg'\r\nimport './styles.css'\r\n\r\nexport const ProfileBadgeComponent = (props) => {\r\n    const { username, className } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        setDidLookup(true);\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 404) {\r\n            alert('There was an error finding the requested user')\r\n        } else {\r\n            alert(\"server issue\")\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n            let mounted = true;\r\n            const fetchProfile = async () => {\r\n                if (!mounted) {return}\r\n                if (!didLookup) {\r\n                    apiGetProfileData(handleBackendLookup, username, \"GET\");\r\n                }\r\n            }\r\n            fetchProfile();          \r\n    });\r\n\r\n    return !didLookup ? \"Loading\" : profile ? <ProfileBadge user={profile} setProfile={setProfile} className={className}/> \r\n        : <span>User not found</span>\r\n}\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, setProfile, className} = props\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!user) {return}\r\n        apiGetProfileData(handleFollowCallback, user.username, \"POST\");\r\n    }\r\n\r\n    const handleFollowCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        } else if (status === 403) {\r\n            window.location.href = '/login'\r\n        } else {\r\n            alert(\"We could not find the profile in question. Please try again later.\")\r\n        }\r\n    }\r\n\r\n    return user ? (\r\n        <div className={`profile-container ${className}`}>\r\n            <div className=\"profile__banner_picture\"><img className=\"banner-img\" src={banner} alt=\"mountain in front of sunset\"/></div>\r\n            <div className=\"profile__picture\">\r\n                <UserPicture user={user} isProfile hideLink />\r\n            </div>\r\n            \r\n            <div className=\"profile__info\">\r\n                <h3>{user.username}</h3>\r\n                <p>{`@${user.username}`}</p>\r\n\r\n                <div className='bio'>{user.bio}</div>\r\n                <div className='location'>{user.location}</div>\r\n\r\n                <div className=\"follower-following-display\">\r\n                   <div className=\"following-count\">\r\n                       <p className=\"number\">{numeral(user.following_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}Following{\" \"}</p>\r\n                   </div>\r\n                    <div className=\"follower-count\">\r\n                        <p className=\"number\">{numeral(user.follower_count || 0).format(\"0a\")}</p><p className=\"text\">{\" \"}{user.follower_count === 1 ? 'Follower' : 'Followers'}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"profile__buttons\">\r\n                {true ? \r\n                <button onClick={handleFollowToggle} className=\"profile__action-button\">{'Edit Profile'}</button> \r\n                : <button onClick={handleFollowToggle} className=\"profile__action-button\">{user.is_following ? 'Unfollow' : 'Follow'}</button>}                \r\n                          \r\n            </div>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect, createRef } from 'react'\r\nimport '../styles/TweetOptionsBtn.css'\r\nimport { apiTweetDelete } from '../tweet_functions'\r\n\r\nfunction TweetOptionsBtn({ tweet, currentUser, setIsDeleted }) {\r\n    const [clicked, setClicked] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const modalWindow = createRef();\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n        if (\r\n            modalWindow.current &&\r\n            !modalWindow.current.contains(event.target)\r\n        ) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptionsButton = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setClicked(true);\r\n    };\r\n\r\n\r\n    function TweetOption({ content }) {\r\n\r\n\r\n        const handleOptionChoice = (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            setClicked(false);\r\n    \r\n            if (content === 'Delete Tweet') {\r\n                apiTweetDelete(handleTweetDelete, tweet.id, currentUser)\r\n            } else if (content === 'Pin to Profile') {\r\n                \r\n            } else if (content === 'report') {\r\n\r\n            } else if (content === 'follow') {\r\n\r\n            } else if (content === 'block') {\r\n\r\n            }\r\n        }\r\n\r\n        const handleTweetDelete = (response, status) => {\r\n            if (status === 200) {\r\n                setIsDeleted(true)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"option\" onClick={handleOptionChoice}>\r\n                <p className=\"option__content\">{content}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!tweet.user){return}\r\n        if (tweet.user.username !== currentUser) {\r\n            setOptions(['Report Tweet', `Block @${tweet.user.username}`, `Follow @${tweet.user.username}`])\r\n        } else {\r\n            setOptions(['Delete Tweet', 'Pin to profile'])\r\n        }\r\n    }, [setOptions, currentUser, tweet.user]);\r\n\r\n\r\n    return !clicked ? (\r\n        <div onClick={toggleOptionsButton} className=\"options-btn__untoggled\">\r\n            <i className=\"fas fa-ellipsis-h options-icon\"></i>\r\n        </div>\r\n    ) : (\r\n        <div className=\"modal__background\">\r\n            <div className=\"options-btn__toggled\" ref={modalWindow}>\r\n                {options.map((option) => <TweetOption content={option} currentUser={currentUser}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetOptionsBtn;\r\n","import { useState, useEffect } from 'react';\r\nimport { apiTweetAction, apiGetTweetData } from '../tweet_functions'\r\nimport { apiGetProfileData } from '../../api/profiles'\r\nimport { UserLink, UserPicture, UserDisplay } from '../../profiles'\r\nimport TweetOptionsBtn from './TweetOptionsBtn'\r\n\r\nimport '../styles/Tweet.css'\r\n\r\n \r\nfunction Tweet({ tweet, className, currentUser, nextUrl }) { \r\n    const [didLike, setDidLike] = useState(false);\r\n    const [didRetweet, setDidRetweet] = useState(false);\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [profile, setProfile] = useState();\r\n    const [didLookupProfile, setDidLookupProfile] = useState(false);\r\n    const [didLookupTweet, setDidLookupTweet] = useState(false);\r\n\r\n\r\n    const handleLink = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        window.location.href = `/${tweet.id}`\r\n    }    \r\n    \r\n\r\n    const handleBackendActionEvent = (response, status) => {\r\n        if (status === 403) {\r\n            window.location.href = \"/login/\"\r\n        } else if (status !== 404) {\r\n            apiGetTweetData(handleTweetDataCallback, tweet.id)\r\n        }\r\n    }\r\n\r\n\r\n    function handleTweetAction(action, event) {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n        \r\n\r\n        let currentAction = action\r\n        \r\n        if (action === 'like') {\r\n            if (didLike) {\r\n                currentAction = 'unlike'\r\n            }\r\n        } else if (action === 'retweet' & didRetweet) {\r\n            return\r\n        }\r\n        apiTweetAction(tweet.id, currentAction, handleBackendActionEvent)\r\n    }\r\n\r\n    const Retweet = ({ callback }) => {\r\n        return tweet.parent ? (\r\n            <div onClick={((e) => handleLink(e))}>\r\n                <p className=\"retweet-header\">retweeted by <UserLink user={tweet.user} /></p>\r\n                <Tweet tweet={tweet.parent} className={tweet.content ? \"retweet\" : \"retweet no-border\"} currentUser={currentUser} />\r\n            </div>\r\n        ) : null\r\n    }\r\n\r\n\r\n    const handleTweetDataCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setDidRetweet(response['didRetweet']);\r\n            setDidLike(response['didLike']);\r\n            setLikes(response['likes']);\r\n            setDidLookupTweet(true);\r\n\r\n            if (response['likes'] === 0) {\r\n                setDidLike(false)\r\n            }\r\n\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    const handleProfileCallback = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response);\r\n            setDidLookupProfile(true)\r\n        } else {\r\n            console.log(response, status)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchData = async () => {\r\n            if (!isMounted) {return}\r\n            if (!didLookupTweet) {\r\n                apiGetTweetData(handleTweetDataCallback, tweet.id);\r\n            }\r\n            if (!didLookupProfile) {\r\n                apiGetProfileData(handleProfileCallback, tweet.user.username, \"GET\");\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [didLookupProfile, didLookupTweet, tweet]);  \r\n\r\n\r\n\r\n    return !isDeleted && (tweet.content || tweet.parent) && (\r\n        <div className={className + \" overall-container\"} onClick={((e) => handleLink(e))}>\r\n            {!tweet.parent &&\r\n            <div className=\"profile-container d-flex\">\r\n                <div className=\"mx-1 profile-picture\">\r\n                    {tweet.user ? <UserLink><UserPicture user={tweet.user}/></UserLink>: \"Loading...\"}\r\n                </div>\r\n                <p className=\"tweet-header\">\r\n                    <UserDisplay user={tweet.user} /> \r\n                </p>\r\n                <TweetOptionsBtn tweet={tweet} currentUser={currentUser} setIsDeleted={setIsDeleted}/>\r\n            </div>}\r\n            <div className=\"tweet-container\">\r\n                {tweet.content !== \"\" &&\r\n                <div className=\"tweet-content-wrapper\">\r\n                    <p className=\"tweet-text\">{`${tweet.content}`}</p>\r\n                </div>\r\n                }\r\n                \r\n                {!tweet.parent ?\r\n                    <div className=\"buttons\">\r\n                        <i className={didRetweet ? `fas fa-retweet btn-icon rt-icon text-green` : \"fas fa-retweet btn-icon rt-icon\"} onClick={((e) => handleTweetAction(\"retweet\", e))}></i>\r\n                        <div className=\"like-btn__container\">\r\n                            <i className={didLike ? \"fas fa-heart btn-icon like-icon red-text\" : \"far fa-heart btn-icon like-icon\"} onClick={((e) => handleTweetAction(\"like\", e))}></i>\r\n                            {likes}\r\n                        </div>\r\n                    </div>\r\n                : \r\n                <div className=\"retweet-container\">\r\n                    <Retweet/>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { apiTweetDetail } from '../tweet_functions'\r\nimport {apiUserLookup} from '../tweet_functions' \r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetDetail.css'\r\n\r\nfunction TweetDetail (props) {\r\n    const { tweetId } = props\r\n    const [didLookup, setDidLookup] = useState(false);\r\n    const [currUser, setCurrUser] = useState();\r\n    const [tweet, setTweet] = useState(null);\r\n\r\n    const handleTweetLookup = (response, status) => {\r\n\r\n        if (status === 200) {\r\n            setTweet(response);\r\n        }\r\n    }\r\n\r\n    const handleCurrUserLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setCurrUser(response.username);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleTweetLookup);\r\n            apiUserLookup(handleCurrUserLookup);\r\n            setDidLookup(true);  \r\n        }\r\n    }, [setDidLookup, tweetId, didLookup])\r\n\r\n    return tweet !== null && (\r\n        <div className=\"detail-container\">\r\n            <div className=\"d-flex\">    \r\n                <div className=\"col-11\">\r\n                    <Tweet tweet={tweet} currentUser={currUser}/>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\nexport default TweetDetail;\r\n","import React from 'react';\r\n\r\nfunction MessageHub() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default MessageHub;\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetFeed } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetFeedList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetFeed(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [newTweets]);\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const fetchTweetFeed = async () => {\r\n      if (!isMounted) {return}\r\n      if (tweetsDidSet === false) {\r\n        await apiTweetFeed(username, callback);\r\n      }\r\n    }\r\n    fetchTweetFeed();\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n    \r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username} nextUrl={nextUrl}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetFeedList","import React, {useRef, useEffect, useState} from 'react';\r\nimport {apiTweetList, apiTweetCreate} from '../../tweets/tweet_functions';\r\nimport {apiGetProfileData} from '../../api/profiles';\r\nimport {UserPicture} from '../../profiles';\r\nimport './styles.css'\r\n\r\nfunction TweetForm(props) {\r\n    const [profile, setProfile] = useState();\r\n    const [didLookupProfile, setDidLookupProfile] = useState(false);\r\n    const {username} = props\r\n    console.log(username)\r\n    const textAreaRef = useRef('')\r\n\r\n\r\n    const handleBackendRefresh = (response, status) => {\r\n        // backened api handler \r\n        let tempNewTweets = [...props.newTweets]\r\n        if (status === 201) {\r\n            tempNewTweets.unshift(response)\r\n            props.setNewTweets(tempNewTweets)\r\n            apiTweetList(props.username, props.callback)\r\n        } else {\r\n            alert(\"An error has occurred. Please try again\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newTweetContent = textAreaRef.current.value\r\n        if (newTweetContent !== '') {\r\n            apiTweetCreate(newTweetContent, handleBackendRefresh, props.username)\r\n        }\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    const handleFetchCallback = (response, status) => {\r\n        console.log(response, status)\r\n        if (status === 200) {\r\n            setProfile(response);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        const fetchProfile = async () => {\r\n            if (!mounted || !username) {return}\r\n            apiGetProfileData(handleFetchCallback, username, 'GET');\r\n        }\r\n        if (!didLookupProfile) {\r\n            fetchProfile();\r\n            setDidLookupProfile(true);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [didLookupProfile, username]);\r\n\r\n    return (\r\n            <div className=\"tweet-form__container-outer\">\r\n                <div className=\"tweet-form__container-inner\">\r\n                    <div className=\"profile__container\">\r\n                        <UserPicture user={profile ? profile: {\"username\":\"anon\"} }/>\r\n                    </div>\r\n                    <form className=\"tweet-form\">\r\n                        <label className=\"\"></label>\r\n                        <textarea placeholder=\"What's happening?\" ref={textAreaRef} required={true} className=\"tweet-form__textarea\">\r\n                        </textarea>\r\n                    </form>\r\n                </div>\r\n                <div className=\"tweet-form__buttons\">\r\n                    <button className=\"tweet-form__submit\" onClick={handleSubmit}>Tweet</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TweetForm;\r\n","import { useEffect } from 'react'\r\nimport Tweet from './Tweet'\r\nimport { apiTweetList } from '../tweet_functions'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nconst TweetList = ({ newTweets, setNewTweets, tweets, setTweets, username, tweetsDidSet, callback, nextUrl, handleLoadNextResponse }) => {\r\n  \r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    if (nextUrl !== null) {\r\n      apiTweetList(username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length > 0) {\r\n      setTweets([...newTweets, ...tweets])\r\n      setNewTweets([])\r\n    }\r\n  }, [newTweets, tweets, setTweets, setNewTweets]);\r\n  \r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      apiTweetList(username, callback)\r\n    }\r\n  }, [tweetsDidSet, username, callback]);\r\n\r\n  return (\r\n      <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={username}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TweetList","import React from 'react';\r\nimport TweetFeedList from '../../tweets/components/TweetFeedList';\r\nimport TweetForm from '../../components/tweet-form/TweetForm';\r\nimport TweetList from '../../tweets/components/TweetList';\r\nimport './styles.css';\r\n\r\nfunction Feed(props) {\r\n    const {currUser, newTweets, setNewTweets,\r\n        tweets, setTweets, tweetsDidSet, \r\n        callback, setTweetsDidSet, nextUrl, \r\n        handleLoadNextResponse} = props  \r\n    \r\n    return (\r\n        <div className=\"twitter_feed\">\r\n            <div className=\"home__header\">\r\n                <p className=\"header__content\">Home</p>\r\n            </div>\r\n            <div className=\"twitter-feed__container\">\r\n                <TweetForm\r\n                    username={currUser}\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    callback={callback}\r\n                />\r\n                {!currUser ?\r\n                <TweetList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                /> :\r\n                <TweetFeedList\r\n                    newTweets={newTweets}\r\n                    setNewTweets={setNewTweets}\r\n                    tweets={tweets}\r\n                    setTweets={setTweets}\r\n                    username={currUser}\r\n                    tweetsDidSet={tweetsDidSet}\r\n                    setTweetsDidSet={setTweetsDidSet}\r\n                    callback={callback}\r\n                    nextUrl={nextUrl}\r\n                    handleLoadNextResponse={handleLoadNextResponse}\r\n                />}\r\n            </div>\r\n        \r\n        </div>\r\n);\r\n}\r\n\r\nexport default Feed;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {apiGetUserTweets} from '../tweet_functions'\r\nimport Tweet from './Tweet'\r\nimport '../styles/TweetFeed.css'\r\n\r\n\r\nfunction UserTweetList(props) {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsExist, setTweetsExist] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const {user, handleLoadNextResponse, callback} = props;\r\n\r\n\r\n    const handleGetUserTweets = (response, status) => {\r\n        console.log(response)\r\n        if (status === 200) {\r\n            setTweets(response.results);\r\n            setTweetsExist(true);\r\n            setNextUrl(response.next)\r\n        } else if (status === 202) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        if (nextUrl !== null) {\r\n            apiGetUserTweets(handleLoadNextResponse, user, nextUrl);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n        if (mounted === true) {\r\n            apiGetUserTweets(handleGetUserTweets, user);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            mounted = false\r\n        }\r\n    }, [setLoading, handleLoadNextResponse, user])\r\n\r\n\r\n  return (!loading && tweetsExist) ? (\r\n    <div className=\"tweet_feed__container\">\r\n          {tweets.map((tweet, idx) => {return <Tweet tweet={tweet} idx={idx} key={`${idx}-{tweet.id}`} callback={callback} currentUser={user}/>})}\r\n          {nextUrl !== null && <button className='btn btn-outline btn-primary' onClick={handleLoadNext}>Load More</button>}\r\n      </div>\r\n  ) : (\r\n    null\r\n  );\r\n}\r\n\r\nexport default UserTweetList;\r\n","import React from 'react';\r\nimport {ProfileBadgeComponent} from '../profiles'\r\nimport UserTweetList from '../tweets/components/UserTweetList'\r\nimport './styles.css'\r\n\r\nfunction ProfileComponent(props) {\r\n    const {username, className, handleLoadNextResponse, nextUrl, callback,} = props;\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"profile__header\">\r\n                <p className=\"profile__content\">{username}</p>\r\n            </div>\r\n            <div className=\"profile__body\">\r\n                <div className=\"profile\">\r\n                    <ProfileBadgeComponent username={username} className={className} handleLoadNextResponse={handleLoadNextResponse}/>\r\n                </div>\r\n                <UserTweetList user={username} handleLoadNextResponse={handleLoadNextResponse} nextUrl={nextUrl} callback={callback}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import './Navbar.css'\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Navbar(props) {\r\n    const {currentUser} = props\r\n\r\n    const navbarContent = [\r\n        \"Home\",\r\n        \"Profile\",\r\n        \"Messages\",\r\n        \"Settings\"\r\n    ]\r\n\r\n    function NavbarListItemComponent({content, currentUser}) {\r\n        const [path, setPath] = useState('/');\r\n        const [activeSection, setActiveSection] = useState('');\r\n        const [isActive, setIsActive] = useState(false);\r\n\r\n        function listIcon() {\r\n            if (content === 'Home') {\r\n                return <i className=\"fas fa-home text-thin\"></i>\r\n            } else if (content === 'Profile') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-user-circle\"></i>\r\n                }\r\n                return <i class=\"far fa-user-circle\"></i>\r\n            } else if (content === 'Settings') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-cog bold\"></i>\r\n                }\r\n                return <i class=\"fas fa-cog\"></i>\r\n            } else if (content === 'Messages') {\r\n                if (isActive) {\r\n                    return <i className=\"fas fa-envelope\"></i>\r\n                }\r\n                return <i className=\"far fa-envelope\"></i>\r\n            } \r\n        }\r\n\r\n        useEffect(() => {\r\n            if (content === 'Profile') {\r\n                setPath(`/profile/${currentUser}`)\r\n            } else if (content === 'Settings') {\r\n                setPath('/settings')\r\n            } else if (content === 'Messages') {\r\n                setPath('/messages')\r\n            }\r\n        }, [content, currentUser]);\r\n\r\n        useEffect(() => {\r\n            const location = window.location.href\r\n\r\n            if (location.includes('settings')) {\r\n                setActiveSection(\"Settings\");\r\n            } else if (location.includes('messages')) {\r\n                setActiveSection('Messages');\r\n            } else if (location.includes('profile')) {\r\n                setActiveSection(\"Profile\");\r\n            } else if (location === 'http://localhost:3000/') {\r\n                setActiveSection('Home');\r\n            }   \r\n            setIsActive(content === activeSection);\r\n            console.log(content, isActive);\r\n        }, [activeSection, content, isActive]);\r\n    \r\n        return (\r\n            <>\r\n                <Link className=\"navbar__link\" to={path}>\r\n                    <div className={`navbar__list-item ${isActive && 'bold'}`}>\r\n                        <div className='list-item__icon'>{listIcon()}</div>\r\n                        <div className=\"list-item__content\">{content && content}</div>\r\n                    </div>   \r\n                </Link>     \r\n            </>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        var hostName = 'http://localhost:3000/'\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        let path = window.location.href\r\n        if (path !== hostName) {\r\n            window.location.href = '/'\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navbar__container__outer\">\r\n            <div className=\"navbar__container__inner\">\r\n        \r\n                <ul className='navbar__list'>\r\n                    <li className=\"navbar__header\">\r\n                        <i onClick={handleClick} className=\"fab fa-twitter twitter-icon\"></i>\r\n                    </li>\r\n                    {navbarContent.map((content) => <li><NavbarListItemComponent content={content} currentUser={currentUser} /></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\nimport MessageHub from '../components/messages/MessageHub';\r\n\r\n\r\n// import TweetList from \"../tweets/components/TweetList\"\r\nimport '../styles/Home.css'\r\nimport '../profiles/styles.css'\r\nimport Feed from '../components/feed/Feed'\r\nimport ProfileComponent from '../components/ProfileComponent'\r\nimport { apiUserLookup } from '../tweets/tweet_functions'\r\nimport Navbar from \"../components/navbar/Navbar\"\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nfunction Home(props) {\r\n    const [newTweets, setNewTweets] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    const [nextUrl, setNextUrl] = useState();\r\n    const [currUser, setCurrUser] = useState();\r\n    const [currentSection, setCurrentSection] = useState('Home');\r\n\r\n    const { username } = props\r\n\r\n\r\n\r\n    function apiTweetListCallback (response, status) {\r\n        if (status === 200) {\r\n          setTweets(response.results)\r\n          setTweetsDidSet(true)\r\n          setNextUrl(response.next)\r\n        } else {\r\n          alert(\"There was an error\")\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweets(newTweets)\r\n            setNextUrl(response.next)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n    };\r\n\r\n    const handleUserAuthCallback = (response, status) => {\r\n        console.log(response, status);\r\n        if (status === 200) {\r\n            setCurrUser(response['username'])\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        apiUserLookup(handleUserAuthCallback)\r\n    }, []);\r\n    return (\r\n        <Router>\r\n            <div className=\"home-container\">\r\n                <Navbar setCurrentSection={setCurrentSection} currentSection={currentSection} currentUser={username}/>\r\n                <Routes>\r\n                    <Route exact path='/' element={<Feed currUser={currUser} newTweets={newTweets} setNewTweets={setNewTweets}\r\n                                tweets={tweets} setTweets={setTweets} tweetsDidSet={tweetsDidSet} callback={apiTweetListCallback}\r\n                                setTweetsDidSet={setTweetsDidSet} nextUrl={nextUrl} handleLoadNextResponse={handleLoadNextResponse}/>}>\r\n                        \r\n                    </Route>\r\n                    <Route path={`profile/${username ? username : \"\"}`} element={<ProfileComponent username={username} callback={apiTweetListCallback}\r\n                        className=\"profile-view\" handleLoadNextResponse={handleLoadNextResponse}/>}>   \r\n                    </Route>\r\n                    <Route exact path='messages' element={<MessageHub />}></Route>\r\n                    <Route exact path='settings'></Route>\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TweetDetail from './tweets/components/TweetDetail'\n\nimport Home from './pages/Home';\nimport TweetFeedList from './tweets/components/TweetFeedList';\nimport TweetList from './tweets/components/TweetList';\nimport ProfileComponent from './components/ProfileComponent';\nimport Navbar from './components/navbar/Navbar';\n\nconst e = React.createElement\nconst tweetList = document.getElementById(\"root\")\nif (tweetList) {\n    ReactDOM.render(e(Home, tweetList.dataset), tweetList);\n}\n\nconst globalTweetList = document.getElementById(\"global_tweets\")\nif (globalTweetList) {\n    ReactDOM.render(<TweetList />, globalTweetList);\n}\n\nconst tweetFeed = document.getElementById(\"tweet_feed\")\nif (tweetFeed) {\n    const customComponent = e(TweetFeedList, tweetFeed.dataset)\n    ReactDOM.render(customComponent, tweetFeed);\n}\n\nconst tweetDetailElements = document.getElementById(\"tweet-detail-view\")\n\nif (tweetDetailElements) {\n    ReactDOM.render(e(TweetDetail, tweetDetailElements.dataset), tweetDetailElements)\n}\n\nconst userProfileBadgeElements = document.querySelectorAll(\".twitter-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileComponent, container.dataset), container);\n})\n\nconst navbarComponent = document.getElementById(\"navbar\");\n\nif (navbarComponent) {\n    const customComponent = e(Navbar, navbarComponent.dataset);\n    ReactDOM.render(customComponent, navbarComponent);\n}\n\n\n\n\n"],"sourceRoot":""}